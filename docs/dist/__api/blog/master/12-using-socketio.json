{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Using Socket.io with AdonisJS v5"}]},{"type":"element","tag":"h1","props":{"id":"using-socketio-with-adonisjs-v5"},"children":[{"type":"element","tag":"a","props":{"href":"#using-socketio-with-adonisjs-v5","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using Socket.io with AdonisJS v5"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://socket.io/"},"children":[{"type":"text","value":"Socket.io"}]},{"type":"text","value":" is a very popular library for real-time and bidirectional communication. Quite often I am asked on how to use socket.io with AdonisJS v5 and in this article, I will answer that question."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#simplest-approach"},"children":[{"type":"text","value":"Simplest approach"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#extracting-socketio-to-a-service-object"},"children":[{"type":"text","value":"Extracting socket.io to a Service Object"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#creating-service-object"},"children":[{"type":"text","value":"Creating service object"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#adding-getclients-helper"},"children":[{"type":"text","value":"Adding getClients helper"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"simplest-approach"},"children":[{"type":"element","tag":"a","props":{"href":"#simplest-approach","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Simplest approach"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's begin with the most simplest approach of integrating socket.io with AdonisJS. The first step is to install the package from the npm package registry."}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"yarn"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i socket.io @types/socket.io\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"yarn"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> socket.io @types/socket.io\n"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, manually create a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"text","value":" file and paste the following contents inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> socketIo <span class=\"token keyword\">from</span> <span class=\"token string\">'socket.io'</span>\n<span class=\"token keyword\">import</span> Server <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Server'</span>\n\n<span class=\"token comment\">/**\n * Pass AdonisJS http server instance to socketIo.\n */</span>\n<span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token function\">socketIo</span><span class=\"token punctuation\">(</span>Server<span class=\"token punctuation\">.</span>instance<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/**\n * Standard business from here\n */</span>\nio<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'news'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> hello<span class=\"token operator\">:</span> <span class=\"token string\">'world'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my other event'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, import the above created file inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"providers/AppProvider.ts"}]},{"type":"text","value":" file under the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ready"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-tip"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ready"}]},{"type":"text","value":" method is by called when the HTTP server is ready to accept Incoming requests."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"providers/AppProvider.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IocContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@adonisjs/fold'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">protected</span> container<span class=\"token operator\">:</span> IocContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">ready</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ioc:Adonis/Core/Application'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">/**\n     * Only import socket file, when environment is `web`. In other\n     * words do not import during ace commands.\n     */</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>environment <span class=\"token operator\">===</span> <span class=\"token string\">'web'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../start/socket'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's all you need to do in order to setup socket.io. Let's take a step further and also test that we are able to establish a connection from the browser."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open/create "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"resources/views/welcome.edge"}]},{"type":"text","value":" file and paste the following HTML snippet inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"resources/views/welcome.edge"}]},{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.dev.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">const</span> socket <span class=\"token operator\">=</span> <span class=\"token function\">io</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:3333'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'news'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my other event'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> my<span class=\"token operator\">:</span> <span class=\"token string\">'data'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Register the following route to render the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"welcome"}]},{"type":"text","value":" view."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'welcome'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, start the development server by running "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace serve --watch"}]},{"type":"text","value":" and open "},{"type":"element","tag":"a","props":{"href":"http://localhost:3333"},"children":[{"type":"text","value":"http://localhost:3333"}]},{"type":"text","value":" in the browser to see the console messages being logged."}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/video/upload/v1591543846/adonisjs.com/blog/socket-io_i4qe6n.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"extracting-socketio-to-a-service-object"},"children":[{"type":"element","tag":"a","props":{"href":"#extracting-socketio-to-a-service-object","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Extracting socket.io to a Service Object"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Socket.io allows you to emit/broadcast socket events from anywhere inside your codebase, given you can access the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"io"}]},{"type":"text","value":" object."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our example, we instantiated the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"io"}]},{"type":"text","value":" inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"text","value":" file, but never exported it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token function\">socketIo</span><span class=\"token punctuation\">(</span>Server<span class=\"token punctuation\">.</span>instance<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One option is to export it from this file and then import the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"text","value":" file anywhere we want to access the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"io"}]},{"type":"text","value":" object. However, I would like to avoid it for following reasons."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"First time we import this file to create the socket io server. And, in subsequent imports, we are importing it to access the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"io"}]},{"type":"text","value":" variable. This alone doesn't feel hygienic."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The files inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start"}]},{"type":"text","value":" folder of AdonisJS are meant to perform one time only operations. However, in this case, we are also planning to import this file elsewhere inside our codebase."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finally, by wrapping socket.io inside a service object, we can make our code more intentful."}]}]},{"type":"element","tag":"h3","props":{"id":"creating-service-object"},"children":[{"type":"element","tag":"a","props":{"href":"#creating-service-object","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Creating service object"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service object is just a fancy word of a class stored inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Services"}]},{"type":"text","value":" folder. So lets begin by creating one and paste the following code snippet inside it"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Services/Ws.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> socketIo <span class=\"token keyword\">from</span> <span class=\"token string\">'socket.io'</span>\n<span class=\"token keyword\">import</span> Server <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Server'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Ws</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> isReady <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">public</span> io<span class=\"token operator\">:</span> socketIo<span class=\"token punctuation\">.</span>Server\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">start</span> <span class=\"token punctuation\">(</span><span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>socket<span class=\"token operator\">:</span> socketIo<span class=\"token punctuation\">.</span>Socket<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>io <span class=\"token operator\">=</span> <span class=\"token function\">socketIo</span><span class=\"token punctuation\">(</span>Server<span class=\"token punctuation\">.</span>instance<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isReady <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * This makes our service a singleton\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ws</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, open the existing "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"text","value":" file and replace its contents with the following code snippet."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Ws <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Services/Ws'</span>\n\nWs<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'news'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> hello<span class=\"token operator\">:</span> <span class=\"token string\">'world'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my other event'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's all! Your code should work as it is. However, now we have a much nicer API."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/socket.ts"}]},{"type":"text","value":" file just have one job, ie: To initiate the socket.io server."}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Ws"}]},{"type":"text","value":" service doesn't perform any actions implicitly. You must call the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start"}]},{"type":"text","value":" method explicitly to start the server."}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Also, you can now import the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Ws"}]},{"type":"text","value":" service anywhere inside your codebase and access "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".io"}]},{"type":"text","value":" property to emit events."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Ws <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Services/Ws'</span>\n\nWs<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'everyone'</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"adding-getclients-helper"},"children":[{"type":"element","tag":"a","props":{"href":"#adding-getclients-helper","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Adding "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"getClients"}]},{"type":"text","value":" helper"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since, we have wrapped the socket.io inside a service object, we can add our own helpers to simplify certain tasks. For demonstration, let's add a method to fetch a list of connected client ids."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Services/Ws.ts"}]},{"type":"text","value":" file and add the following "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"getClients"}]},{"type":"text","value":" method to it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">class</span> <span class=\"token class-name\">Ws</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getClients</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">namespace</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> room<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> namespaceInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">namespace</span> <span class=\"token operator\">||</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      namespaceInstance <span class=\"token operator\">=</span> namespaceInstance<span class=\"token punctuation\">.</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      namespaceInstance<span class=\"token punctuation\">.</span><span class=\"token function\">clients</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> Error<span class=\"token punctuation\">,</span> clients<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>clients<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//  ... rest of the service</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And use it as follows:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Ws <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Services/Ws'</span>\n\n<span class=\"token keyword\">await</span> Ws<span class=\"token punctuation\">.</span><span class=\"token function\">getClients</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> Ws<span class=\"token punctuation\">.</span><span class=\"token function\">getClients</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-namespace'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> Ws<span class=\"token punctuation\">.</span><span class=\"token function\">getClients</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-namespace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'some-room'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's all for now :)"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Virk!"}]}]}
