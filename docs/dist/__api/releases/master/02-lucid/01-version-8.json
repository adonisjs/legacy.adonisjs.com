{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Lucid 7.5 - 8.0"}]},{"type":"element","tag":"h1","props":{"id":"lucid-75---80"},"children":[{"type":"element","tag":"a","props":{"href":"#lucid-75---80","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Lucid "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"7.5 - 8.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The release notes contains an aggregated list of chances made between "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid@7.5"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid@8.0"}]},{"type":"text","value":". You can also check "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/releases"},"children":[{"type":"text","value":"individual releases"}]},{"type":"text","value":" on Github."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#changes"},"children":[{"type":"text","value":"Changes"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upgrade using the following command"}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"yarn"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i @adonisjs/lucid@alpha\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"yarn"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @adonisjs/lucid@alpha\n"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"changes"},"children":[{"type":"element","tag":"a","props":{"href":"#changes","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Changes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add pagination support using simple paginator (uses offset based approach). "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/d3584fe720791ba885906728ef981fae54d7a2d2"},"children":[{"type":"text","value":"d3584fe"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ref"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"raw"}]},{"type":"text","value":" methods to create raw query builder instances that cannot be executed, but used as a reference on existing queries. Check "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/releases/tag/v7.6.0"},"children":[{"type":"text","value":"release notes"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>\n  Database<span class=\"token punctuation\">.</span><span class=\"token function\">raw</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count(*) as user_count, status'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add support for global transactions. Helpful when writing tests, since each test can start and rollback a global transaction to always start from a clean state. Check "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/releases/tag/v7.6.1"},"children":[{"type":"text","value":"release note"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Define model hooks using decorators "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/ae2f398eed5e13569b60c02487675b22a4d6dafb"},"children":[{"type":"text","value":"ae2f398"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Hash <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Hash'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> column<span class=\"token punctuation\">,</span> beforeSave<span class=\"token punctuation\">,</span> BaseModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> password<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n<span class=\"dimer-highlight-code-line\">  @<span class=\"token function\">beforeSave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">hashPassword</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>$dirty<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      user<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Hash<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"exists"}]},{"type":"text","value":" validation rules. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/4768c3c7a433d944e273c45b03bf87d334ac88fb"},"children":[{"type":"text","value":"4768c3c"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"chore"}]},{"type":"text","value":": Run whole test suite on "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"MSSQL"}]},{"type":"text","value":" as well "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/5c358532b244655f2b8d0a0ecf90946159af03c2"},"children":[{"type":"text","value":"5c35853"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/6874d5979fe3fc173cbf85a6aa174763319e9f1d"},"children":[{"type":"text","value":"6874d59"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add support for "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"query scopes"}]},{"type":"text","value":". "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/88cf86bd7c0b2527c607dc4a1530100fe08965ff"},"children":[{"type":"text","value":"88cf86b"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"onQuery"}]},{"type":"text","value":" hook property on relationship options. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/9b58684bbae065bf3240c287eec52a8476f0a4b0"},"children":[{"type":"text","value":"9b58684"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> column<span class=\"token punctuation\">,</span> hasOne<span class=\"token punctuation\">,</span> HasOne<span class=\"token punctuation\">,</span> BaseModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">hasOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Profile<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onQuery</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> query<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is_active'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> profile<span class=\"token operator\">:</span> HasOne<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> Profile<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>  \n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"(before/after)Find"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"(before/after)Fetch"}]},{"type":"text","value":" hooks. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/5e125f977cf8331766b33a7f80314bbf2e42474a"},"children":[{"type":"text","value":"5e125f9"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Implement universal query logger that emits "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:query"}]},{"type":"text","value":" event for all queries. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/1466b319e5ca7c91a531e5c5c731bbd1bb6f409c"},"children":[{"type":"text","value":"1466b31"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add pretty printer to print SQL queries with colors and context. Goes hand in hand with the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:query"}]},{"type":"text","value":" event. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/4281d1fb3fdc8ef88f019ad090b3fd3c6c336266"},"children":[{"type":"text","value":"4281d1f"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add self managed transactions. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/0e2f6eea7429170341d454ce80964f698844b729"},"children":[{"type":"text","value":"0e2f6ee"}]},{"type":"text","value":". Read more about it in "},{"type":"element","tag":"a","props":{"href":"/guides/database/transactions#managed-transactions"},"children":[{"type":"text","value":"guides"}]},{"type":"text","value":"."}]}]}]}]}
