{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Multiple guards"}]},{"type":"element","tag":"h1","props":{"id":"multiple-guards"},"children":[{"type":"element","tag":"a","props":{"href":"#multiple-guards","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Multiple guards"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Most of the applications usually make use of a single guard to login/authenticate users. However, there can be times, when you want to use multiple guards. For example:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#defining-multiple-guards"},"children":[{"type":"text","value":"Defining multiple guards"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"api"}]},{"type":"text","value":" guard to authenticate requests from the mobile app and using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" guard for the browser client."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using two variants of the web guard for authenticating regular users and admins. However, we recommend using roles for this scenario."}]}]},{"type":"element","tag":"h2","props":{"id":"defining-multiple-guards"},"children":[{"type":"element","tag":"a","props":{"href":"#defining-multiple-guards","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Defining multiple guards"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first step is to define all the guards you are planning to use inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"contracts/auth.ts"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'@ioc:Adonis/Addons/Auth'</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ProvidersList</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      implementation<span class=\"token operator\">:</span> LucidProviderContract<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      config<span class=\"token operator\">:</span> LucidProviderConfig<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">GuardsList</span> <span class=\"token punctuation\">{</span>\n    web<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      implementation<span class=\"token operator\">:</span> SessionGuardContract<span class=\"token operator\">&lt;</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'web'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      config<span class=\"token operator\">:</span> SessionGuardConfig<span class=\"token operator\">&lt;</span><span class=\"token string\">'user'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    basic<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      implementation<span class=\"token operator\">:</span> BasicAuthGuardContract<span class=\"token operator\">&lt;</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'basic'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">      config<span class=\"token operator\">:</span> BasicAuthGuardConfig<span class=\"token operator\">&lt;</span><span class=\"token string\">'user'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can notice, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"multiple guards can use the same provider"}]},{"type":"text","value":". However, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"one guard cannot use multiple providers"}]},{"type":"text","value":". For example: If you have two providers, one for the users and another one for admins, then you will have to create two guards as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As soon as you define the guards inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"contracts/auth.ts"}]},{"type":"text","value":" file. The Typescript compiler will complain that the guard is missing the config inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/auth.ts"}]},{"type":"text","value":" file."}]}]}
