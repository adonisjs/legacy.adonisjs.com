{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Error Reporters"}]},{"type":"element","tag":"h1","props":{"id":"error-reporters"},"children":[{"type":"element","tag":"a","props":{"href":"#error-reporters","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Error Reporters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Validation error messages are consumed by many different parts of your application. You may use them at the time of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"rendering the Edge template"}]},{"type":"text","value":" or you may want to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pass it to frontend client"}]},{"type":"text","value":" from your REST API server."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#defining-reporter"},"children":[{"type":"text","value":"Defining reporter"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#api-error-reporter"},"children":[{"type":"text","value":"API Error Reporter"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#jsonapi-error-reporter"},"children":[{"type":"text","value":"JSONAPI error reporter"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#web-error-reporter"},"children":[{"type":"text","value":"Web error reporter"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation"},"children":[{"type":"text","value":"Content Negotiation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-own-error-reporter"},"children":[{"type":"text","value":"Creating your own error reporter"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In other words, you will want different representation of the same error messages, based upon the consumer of your app. For example:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Edge templates just want an array of messages in reference to a form field name."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"a","props":{"href":"https://jsonapi.org/"},"children":[{"type":"text","value":"JSONAPI"}]},{"type":"text","value":" spec complaint server should return the error messages as per the "},{"type":"element","tag":"a","props":{"href":"https://jsonapi.org/format/#errors"},"children":[{"type":"text","value":"spec"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Or, maybe you want to render them as XML."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If validation error messages always had a fixed shape, then you will have to manually loop over them for restructuring. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Luckily, not with error reporter"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"defining-reporter"},"children":[{"type":"element","tag":"a","props":{"href":"#defining-reporter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Defining reporter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"validator.validate"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" methods optionally accepts a reporter to format the error messages. You can pass one of the pre-bundled reporters or a custom one."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schema<span class=\"token punctuation\">,</span> validator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Validator'</span>\n\nvalidator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  schema<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  reporter<span class=\"token operator\">:</span> validator<span class=\"token punctuation\">.</span>reporters<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">,</span> <span class=\"token comment\">// ðŸ‘ˆ using reporter</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"api-error-reporter"},"children":[{"type":"element","tag":"a","props":{"href":"#api-error-reporter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"API Error Reporter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"api"}]},{"type":"text","value":" reporter, when creating an API server and not following any particular spec. Following is an example of the error message formatted using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"api"}]},{"type":"text","value":" reporter."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-json","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"errors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"rule\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required validation failed\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"jsonapi-error-reporter"},"children":[{"type":"element","tag":"a","props":{"href":"#jsonapi-error-reporter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"JSONAPI error reporter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"jsonapi"}]},{"type":"text","value":" error reporter will format error messages as per the "},{"type":"element","tag":"a","props":{"href":"https://jsonapi.org/format/#errors"},"children":[{"type":"text","value":"JSON API spec"}]},{"type":"text","value":". Following is an example of the same"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-json","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"errors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"pointer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phone\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required validation failed\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"web-error-reporter"},"children":[{"type":"element","tag":"a","props":{"href":"#web-error-reporter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Web error reporter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" reporter must be used by server rendered applications. The error reporter redirects back to the form along with error messages stored as session "},{"type":"element","tag":"a","props":{"href":"/guides/http/sessions#flash-messages"},"children":[{"type":"text","value":"flash messages"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We recommend reading the "},{"type":"element","tag":"a","props":{"href":"/guides/http/form-submissions#validating-form-data"},"children":[{"type":"text","value":"form submission guide"}]},{"type":"text","value":" to understand the flow"}]},{"type":"element","tag":"h2","props":{"id":"content-negotiation"},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Content Negotiation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method uses the "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation#The_Accept_header"},"children":[{"type":"text","value":"content negotiation"}]},{"type":"text","value":" to choose the most appropriate error formatter for a given HTTP request."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Accept = 'application/vnd.api+json'"}]},{"type":"text","value":" header is set, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"jsonapi"}]},{"type":"text","value":" error reporter will be used."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Accept = 'application/json'"}]},{"type":"text","value":" header, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"api"}]},{"type":"text","value":" error reporter will be used."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For everything else, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" error reporter will be used."}]}]},{"type":"element","tag":"h2","props":{"id":"creating-your-own-error-reporter"},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-own-error-reporter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Creating your own error reporter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creating your own error reporter is very simple, you just need to adhere to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ErrorReporterContract"}]},{"type":"text","value":" interface."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a new file "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Validators/Reporters/MyReporter.ts"}]},{"type":"text","value":" and paste the following contents inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Validators/Reporters/MyReporter.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ValidationException<span class=\"token punctuation\">,</span>\n  MessagesBagContract<span class=\"token punctuation\">,</span>\n  ErrorReporterContract<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Validator'</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ErrorNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  field<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyReporter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ErrorReporterContract<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> errors<span class=\"token operator\">:</span> ErrorNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> hasErrors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">/**\n   * Tracking reported errors\n   */</span>\n  <span class=\"token keyword\">private</span> errors<span class=\"token operator\">:</span> ErrorNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> messages<span class=\"token operator\">:</span> MessagesBagContract<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">private</span> bail<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Invoked by the validation rules to\n   * report the error\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">report</span> <span class=\"token punctuation\">(</span>\n    pointer<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    rule<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    arrayExpressionPointer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    args<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Turn on the flag\n     */</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hasErrors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    <span class=\"token comment\">/**\n     * Use messages bag to get the error message\n     */</span>\n    <span class=\"token keyword\">const</span> errorMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>\n      pointer<span class=\"token punctuation\">,</span>\n      rule<span class=\"token punctuation\">,</span>\n      message<span class=\"token punctuation\">,</span>\n      arrayExpressionPointer<span class=\"token punctuation\">,</span>\n      args<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">/**\n     * Track error message\n     */</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> errorMessage<span class=\"token punctuation\">,</span> field<span class=\"token operator\">:</span> pointer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">/**\n     * Bail mode means, stop validation on the first\n     * error itself\n     */</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bail<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Converts validation failures to an exception\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">toError</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationException</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Get error messages as JSON\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">toJSON</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      errors<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, you can import this file and assign it to the reporter property."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MyReporter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Validators/Reporters/MyReporter'</span>\n\nvalidator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  schema<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  reporter<span class=\"token operator\">:</span> MyReporter<span class=\"token punctuation\">,</span> <span class=\"token comment\">// ðŸ‘ˆ using reporter</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}
