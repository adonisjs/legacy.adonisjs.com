{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Schema Types"}]},{"type":"element","tag":"h1","props":{"id":"schema-types"},"children":[{"type":"element","tag":"a","props":{"href":"#schema-types","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Schema Types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Schema types enforces type validation on a given property. Also, every schema type has a static return data type as well. In other words, there is no need to maintain separate interfaces for Typescript types."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemastring"},"children":[{"type":"text","value":"schema.string"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#passing-additional-rules"},"children":[{"type":"text","value":"Passing additional rules"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemanumber"},"children":[{"type":"text","value":"schema.number"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#passing-additional-rules-1"},"children":[{"type":"text","value":"Passing additional rules"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemaboolean"},"children":[{"type":"text","value":"schema.boolean"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemadate"},"children":[{"type":"text","value":"schema.date"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemaenum"},"children":[{"type":"text","value":"schema.enum"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemaenumset"},"children":[{"type":"text","value":"schema.enumSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemafile"},"children":[{"type":"text","value":"schema.file"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemaarray"},"children":[{"type":"text","value":"schema.array"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#schemaobject"},"children":[{"type":"text","value":"schema.object"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this guide, we will go through all of the available schema types and the options accepted by them."}]},{"type":"element","tag":"h2","props":{"id":"schemastring"},"children":[{"type":"element","tag":"a","props":{"href":"#schemastring","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.string"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to a valid string. Also, you can pass options to trim the whitespace or escape certain characters with HTML entities."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    escape<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    trim<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { title: 'Hello world' }</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":">"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"&"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"'"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\""}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"/"}]},{"type":"text","value":" characters will be escaped with HTML entities."}]},{"type":"element","tag":"h3","props":{"id":"passing-additional-rules"},"children":[{"type":"element","tag":"a","props":{"href":"#passing-additional-rules","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Passing additional rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can pass an array of additional rules as 2nd argument."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n  rules<span class=\"token punctuation\">.</span><span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemanumber"},"children":[{"type":"element","tag":"a","props":{"href":"#schemanumber","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.number"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid number. The string representation of a number will be casted to a number data type. For example: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"22\""}]},{"type":"text","value":" becomes "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"22"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  marks<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { marks: 20 } or { marks: \"20\" }</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"passing-additional-rules-1"},"children":[{"type":"element","tag":"a","props":{"href":"#passing-additional-rules-1","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Passing additional rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"number"}]},{"type":"text","value":" rule does not accept any configuration options, you can pass additional rules as 1st argument itself."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  rules<span class=\"token punctuation\">.</span><span class=\"token function\">unsigned</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  rules<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemaboolean"},"children":[{"type":"element","tag":"a","props":{"href":"#schemaboolean","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.boolean"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid boolean. The following literal values are also casted to a boolean."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"1\""}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"on\""}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"true\""}]},{"type":"text","value":" is casted to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"0\""}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"off\""}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"false\""}]},{"type":"text","value":" is casted to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We cast "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"on"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"off"}]},{"type":"text","value":" values to a boolean, since the HTML form "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"input[type=\"checkbox\"]"}]},{"type":"text","value":" sets the value to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"\"on\""}]},{"type":"text","value":" if checkbox is checked."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  accepted<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { accepted: \"on\" }, { accepted: \"true\" }</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemadate"},"children":[{"type":"element","tag":"a","props":{"href":"#schemadate","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.date"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid date object or a string representing a date. The values are casted to an instance of "},{"type":"element","tag":"a","props":{"href":"https://moment.github.io/luxon/docs/manual/tour.html#creating-a-datetime"},"children":[{"type":"text","value":"luxon.DateTime"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  published_at<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { published_at: \"2020-04-30 12:00:00\" }</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also enforce a format for the string values by defining a valid format accepted by luxon."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  published_at<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'yyyy-MM-dd HH:mm:ss'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or use the following shorthand codes for standardized date/time formats."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  published_at<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'rfc2822'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// OR</span>\n<span class=\"token punctuation\">{</span>\n  published_at<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'sql'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// OR</span>\n<span class=\"token punctuation\">{</span>\n  published_at<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'iso'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemaenum"},"children":[{"type":"element","tag":"a","props":{"href":"#schemaenum","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.enum"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces value to be one of the pre-defined enum options."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  account_type<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">enum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'twitter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'github'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'instagram'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { account_type: 'twitter' }</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also make use of Typescript enums."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">enum</span> SocialAccounts <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">TWITTER</span> <span class=\"token operator\">=</span> <span class=\"token string\">'twitter'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">GITHUB</span> <span class=\"token operator\">=</span> <span class=\"token string\">'github'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">INSTAGRAM</span> <span class=\"token operator\">=</span> <span class=\"token string\">'instagram'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nschema<span class=\"token punctuation\">.</span><span class=\"token keyword\">enum</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>SocialAccounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are caching your validation schema using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"cacheKey"}]},{"type":"text","value":" and your "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"enum options"}]},{"type":"text","value":" relies on a runtime value, then you must make use of "},{"type":"element","tag":"a","props":{"href":"schema-caching#refs"},"children":[{"type":"text","value":"refs"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"schemaenumset"},"children":[{"type":"element","tag":"a","props":{"href":"#schemaenumset","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.enumSet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.enumSet"}]},{"type":"text","value":" is similar to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"enum"}]},{"type":"text","value":", instead it accepts an array of values that falls under one of the pre-defined values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the following example, we expect the user to select one or more of the pre-defined skills."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  skills<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">enumSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'Programming'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Design'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Marketing'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Copy writing'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { skills: ['Programming', 'Design'] }</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are caching your validation schema using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"cacheKey"}]},{"type":"text","value":" and your "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"enumSet options"}]},{"type":"text","value":" relies on a runtime value, then you must make use of "},{"type":"element","tag":"a","props":{"href":"schema-caching#refs"},"children":[{"type":"text","value":"refs"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"schemafile"},"children":[{"type":"element","tag":"a","props":{"href":"#schemafile","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.file"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid uploaded file. You can also enforce additional validation rules on the file size and the extension names."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  avatar<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    size<span class=\"token operator\">:</span> <span class=\"token string\">'2mb'</span><span class=\"token punctuation\">,</span>\n    extnames<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jpeg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemaarray"},"children":[{"type":"element","tag":"a","props":{"href":"#schemaarray","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.array"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid Javascript array."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  tags<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also validate the members of the array, using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".members"}]},{"type":"text","value":" method. For example: We can enforce all members of the array are numbers."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  tags<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { tags: [1, 2, 3] } or { tags: [\"1\", \"2\", \"3\"] }</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To validate the array itself, you can pass additional validation rules to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"array"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  tags<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">minLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A good example would be to validate number of files to be uploaded through HTML form."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  thumbnails<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">maxLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"schemaobject"},"children":[{"type":"element","tag":"a","props":{"href":"#schemaobject","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.object"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enforces the value to be a valid Javascript object. Similar to an array, you can also validate the members/properties of an object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  profile<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    full_name<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    profile_pic<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    twitter_handle<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">optional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Valid data: { full_name: 'Virk', profile_pic: [MultipartStream] }</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To accept an object with any/unknown properties, you can make use of the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"anyMembers"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  config<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]}
