{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Custom Messages"}]},{"type":"element","tag":"h1","props":{"id":"custom-messages"},"children":[{"type":"element","tag":"a","props":{"href":"#custom-messages","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Custom Messages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once you get the validations working, the next natural step is to present helpful error messages to the end user. In this guide, we will go through the API to define custom messages."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#defining-custom-messages"},"children":[{"type":"text","value":"Defining custom messages"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#messages-api"},"children":[{"type":"text","value":"Messages API"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#micro-templating"},"children":[{"type":"text","value":"Micro templating"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wild-card-callback"},"children":[{"type":"text","value":"Wild card callback"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#options-passed-to-the-message-string"},"children":[{"type":"text","value":"Options passed to the message string"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#date"},"children":[{"type":"text","value":"date"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#distinct"},"children":[{"type":"text","value":"distinct"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#enum--enumset"},"children":[{"type":"text","value":"enum / enumSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#file"},"children":[{"type":"text","value":"file"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#minlength--maxlength"},"children":[{"type":"text","value":"minLength / maxLength"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#requiredifexists--requiredifnotexists"},"children":[{"type":"text","value":"requiredIfExists / requiredIfNotExists"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#conditional-required-rules"},"children":[{"type":"text","value":"Conditional required rules"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#requiredwhen"},"children":[{"type":"text","value":"requiredWhen"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"defining-custom-messages"},"children":[{"type":"element","tag":"a","props":{"href":"#defining-custom-messages","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Defining custom messages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Both, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" and the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"validator.validate"}]},{"type":"text","value":" methods accepts an optional "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"messages"}]},{"type":"text","value":" object containing a set of custom messages."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  schema<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'username.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Username is required to sign up'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'username.unique'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The username is already in use'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see, the messages are defined as a combination of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"field"}]},{"type":"text","value":" + "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"the validation rule"}]},{"type":"text","value":" and this enables you to define unique and specific messages for each field."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, you can also define generic messages just for the validation rules. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    required<span class=\"token operator\">:</span> <span class=\"token string\">'Make sure to enter the field value'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'username.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'A unique username is required to sign up'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Validator will first look for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"field.rule"}]},{"type":"text","value":" messages."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Next, it will look for just "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"rule"}]},{"type":"text","value":" messages."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finally, it will fallback to a generic message."}]}]},{"type":"element","tag":"h2","props":{"id":"messages-api"},"children":[{"type":"element","tag":"a","props":{"href":"#messages-api","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Messages API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To make sure that you are applications are not getting bom-bared with ton of custom messages. Validator has support for dynamic messages with the help of wild card callback and micro templating."}]},{"type":"element","tag":"h3","props":{"id":"micro-templating"},"children":[{"type":"element","tag":"a","props":{"href":"#micro-templating","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Micro templating"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The message string cans define placeholders for runtime values as shown in the following code snippet."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    required<span class=\"token operator\">:</span> <span class=\"token string\">'{{ field }} is required to sign up'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">enum</span><span class=\"token operator\">:</span> <span class=\"token string\">'The value of {{ field }} must be in {{ options.choices }}'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is the list of placeholders, you can define inside your messages."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{ field }}"}]},{"type":"text","value":": Name of the field under validation. Nested object paths are represented with a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"dot separator"}]},{"type":"text","value":". For example: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"user.profile.username"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{ rule }}"}]},{"type":"text","value":": Name of the validation rule."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{ options }}"}]},{"type":"text","value":": The options passed by the validation methods. For example: The enum rule will pass an array of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"choices"}]},{"type":"text","value":" and some rules may not pass any options."}]}]},{"type":"element","tag":"h3","props":{"id":"wild-card-callback"},"children":[{"type":"element","tag":"a","props":{"href":"#wild-card-callback","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Wild card callback"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also define a wildcard callback, that is executed to retrieve the message string for every single validation message."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'*'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">,</span> rule<span class=\"token punctuation\">,</span> arrayExpressionPointer<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rule<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> validation error on </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>field<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The wildcard callback can be used in combination with regular messages. In the following example, the wildcard callback will be invoked only for the messages not defined in the object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'*'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">,</span> rule<span class=\"token punctuation\">,</span> arrayExpressionPointer<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rule<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> validation error on </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>field<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'username.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Username is required to sign up'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"options-passed-to-the-message-string"},"children":[{"type":"element","tag":"a","props":{"href":"#options-passed-to-the-message-string","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Options passed to the message string"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is the list of options passed by the different validation methods to the message string."}]},{"type":"element","tag":"h3","props":{"id":"date"},"children":[{"type":"element","tag":"a","props":{"href":"#date","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"date"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"date"}]},{"type":"text","value":" validation rule will pass the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.format"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'date.format'</span><span class=\"token operator\">:</span> <span class=\"token string\">'{{ date }} must be formatted as {{ format }}'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"distinct"},"children":[{"type":"element","tag":"a","props":{"href":"#distinct","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"distinct"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"distinct"}]},{"type":"text","value":" validation rule will pass the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"field"}]},{"type":"text","value":" on which the distinct rule is applied, along with "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"index"}]},{"type":"text","value":" at which the duplicate value was found."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'products.distinct'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The product at {{ options.index + 1 }} position has already been added earlier'</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"enum--enumset"},"children":[{"type":"element","tag":"a","props":{"href":"#enum--enumset","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"enum"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"enumSet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"enum"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"enumSet"}]},{"type":"text","value":" validation rules will pass an array of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.choices"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'enum'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The value must be one of {{ options.choices }}'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'enumSet'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The values must be one of {{ options.choices }}'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"file"},"children":[{"type":"element","tag":"a","props":{"href":"#file","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"file"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The file validation allows defining custom messages for the sub rules. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'file.size'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The file size must be under {{ options.size }}'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'file.extnames'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The file must have one of {{ options.extnames }} extension names'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"minlength--maxlength"},"children":[{"type":"element","tag":"a","props":{"href":"#minlength--maxlength","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"minLength"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"maxLength"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"minLength"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"maxLength"}]},{"type":"text","value":" validation rules will pass the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.length"}]},{"type":"text","value":" to the message."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'minLength'</span><span class=\"token operator\">:</span> <span class=\"token string\">'The array must have {{ minLength }} items'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"requiredifexists--requiredifnotexists"},"children":[{"type":"element","tag":"a","props":{"href":"#requiredifexists--requiredifnotexists","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredIfExists"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredIfNotExists"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredIfExists"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredIfNotExists"}]},{"type":"text","value":" validation rules will pass the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.otherField"}]},{"type":"text","value":" as a string."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'requiredIfExists'</span><span class=\"token operator\">:</span> <span class=\"token string\">'{{ options.otherField }} requires {{ field }}'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"conditional-required-rules"},"children":[{"type":"element","tag":"a","props":{"href":"#conditional-required-rules","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Conditional required rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredIf*"}]},{"type":"text","value":" rules will pass the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.otherFields"}]},{"type":"text","value":" as an array of strings."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requiredIfExistsAll"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requiredIfExistsAny"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requiredIfNotExistsAll"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requiredIfNotExistsAny"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'requiredIfExistsAll'</span><span class=\"token operator\">:</span> <span class=\"token string\">'{{ options.otherFields }} requires {{ field }}'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"requiredwhen"},"children":[{"type":"element","tag":"a","props":{"href":"#requiredwhen","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredWhen"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"requiredWhen"}]},{"type":"text","value":" validation rule will pass the following options."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.otherField"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.operator"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"options.values"}]}]}]}]}
