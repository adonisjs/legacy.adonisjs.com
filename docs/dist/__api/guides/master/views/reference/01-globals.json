{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Globals"}]},{"type":"element","tag":"h1","props":{"id":"globals"},"children":[{"type":"element","tag":"a","props":{"href":"#globals","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Globals"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Globals are the values that are shared with every single view including components. In this guide, we go through the list of globals added by AdonisJS"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#inspect"},"children":[{"type":"text","value":"inspect"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#truncate"},"children":[{"type":"text","value":"truncate"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#excerpt"},"children":[{"type":"text","value":"excerpt"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#request"},"children":[{"type":"text","value":"request"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#route"},"children":[{"type":"text","value":"route"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#signedroute"},"children":[{"type":"text","value":"signedRoute"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#application"},"children":[{"type":"text","value":"application"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#safe"},"children":[{"type":"text","value":"safe"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#csrftoken"},"children":[{"type":"text","value":"csrfToken"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#adding-your-own"},"children":[{"type":"text","value":"Adding your own"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#inside-a-provider"},"children":[{"type":"text","value":"Inside a Provider"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#inside-preloaded-file"},"children":[{"type":"text","value":"Inside preloaded file"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"inspect"},"children":[{"type":"element","tag":"a","props":{"href":"#inspect","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"inspect"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"inspect"}]},{"type":"text","value":" helper is similar to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"JSON.stringify"}]},{"type":"text","value":", but pretty prints the output. You can pass it any value that is acceptable by the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"JSON.stringify"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-tip"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can inspect the state of the entire view using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"state"}]},{"type":"text","value":" variable. ie. "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"inspect(state)"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> inspect({ username: <span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\">virk</span><span class=\"token punctuation\">'</span></span>, age: <span class=\"token number\">28</span>, isAdmin: true }) <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1587022522/adonisjs.com/edge-inspect.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"truncate"},"children":[{"type":"element","tag":"a","props":{"href":"#truncate","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"truncate"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Truncate a string at a given character length."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">{{\n  truncate(\n    'This is a very long sentence that i would like to be shortened',\n    18\n  )\n}}\n\n<span class=\"token comment\">&lt;!-- Output: This is a very long... --></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The 18th character ends at the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"lon"}]},{"type":"text","value":", but the truncate method doesn't chop off the words in between and prints the complete word "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"long"}]},{"type":"text","value":". If for some reason, you don't want this behavior, you can turn it off by enabling the strict mode."}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"Non strict mode"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"Strict mode"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Non strict mode"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">{{\n  truncate(\n    'This is a very long sentence that i would like to be shortened',\n    18\n  )\n}}\n\n<span class=\"token comment\">&lt;!-- Output: This is a very long... --></span></span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Strict mode"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"],"dataLine":"5,9"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">{{\n  truncate(\n    'This is a very long sentence that i would like to be shortened',\n    18,\n<span class=\"dimer-highlight-code-line\">    { strict: true }</span>  )\n}}\n\n<span class=\"dimer-highlight-code-line\"><span class=\"token comment\">&lt;!-- Output: This is a very lon... --></span></span></span>"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, you can also define the suffix for the truncated string. By default, it is set to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"three dots (...)"}]},{"type":"text","value":" ."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">{{\n  truncate(\n    'This is a very long sentence that i would like to be shortened',\n    18,\n    { suffix: '. Read more' }\n  )\n}}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"excerpt"},"children":[{"type":"element","tag":"a","props":{"href":"#excerpt","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"excerpt"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similar to truncate, but also removes the HTML tags from the string. This is useful for defining the content of the meta tags."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">&lt;meta name=\"description\" content=\"</span><span class=\"token mustache\"><span class=\"token punctuation\">{{</span> excerpt(post.content, <span class=\"token number\">30</span>) <span class=\"token punctuation\">}}</span></span><span class=\"token other\">\"/></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"request"},"children":[{"type":"element","tag":"a","props":{"href":"#request","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also access the current "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request"}]},{"type":"text","value":" inside a view, but only when the view is rendered within the HTTP request life-cycle using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ctx.view.render"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"Controller"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"View"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Controller"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">index</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> view <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'welcome'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"View"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> The request url is</span> <span class=\"token mustache\"><span class=\"token punctuation\">{{</span> request.url() <span class=\"token punctuation\">}}</span></span> <span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"route"},"children":[{"type":"element","tag":"a","props":{"href":"#route","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"route"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The route helper can be used to "},{"type":"element","tag":"a","props":{"href":"/guides/http/url-generate#generating-urls"},"children":[{"type":"text","value":"generate URLs"}]},{"type":"text","value":" for the registered routes."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> route(<span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\">PostsController.store</span><span class=\"token punctuation\">'</span></span>) <span class=\"token punctuation\">}}</span></span>\n\n<span class=\"token other\"><span class=\"token comment\">&lt;!--\n  Returns URL for the route handled by \"PostsController.store\" method\n--></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The route helper method accepts a total of two arguments"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Route identifier"}]},{"type":"text","value":": It can be the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" of the route, "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Controller.action"}]},{"type":"text","value":" or the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"route pattern"}]},{"type":"text","value":" itself."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Data"}]},{"type":"text","value":": If route accepts parameters, then you can pass them inside a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"params"}]},{"type":"text","value":" object and for query string, you can define a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"qs"}]},{"type":"text","value":" object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">{{\n  route('PostsController.show', {\n    params: { id: 1 },\n    qs: request.get(),\n  })\n}}</span>\n"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"signedroute"},"children":[{"type":"element","tag":"a","props":{"href":"#signedroute","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"signedRoute"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similar to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"route"}]},{"type":"text","value":" method, but instead creates a signed route. We recommend reading more about "},{"type":"element","tag":"a","props":{"href":"/guides/http/url-generate#generating-signed-urls"},"children":[{"type":"text","value":"signed urls here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"application"},"children":[{"type":"element","tag":"a","props":{"href":"#application","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"application"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Reference to the AdonisJS "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/application/blob/develop/src/Application.ts"},"children":[{"type":"text","value":"Application"}]},{"type":"text","value":" instance. You can use it to generate paths to certain directories, get the current framework version and so on."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\">The current framework version is</span> <span class=\"token mustache\"><span class=\"token punctuation\">{{</span> application.adonisVersion.toString() <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also access the application inside your Typescript code by importing it from the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"IoC"}]},{"type":"text","value":" container."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Application <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Application'</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"safe"},"children":[{"type":"element","tag":"a","props":{"href":"#safe","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"safe"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output of interpolation (the code inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"curly braces"}]},{"type":"text","value":") is HTML escaped to avoid XSS attacks. However, at times you do want to render HTML without escaping and for that you can make use of three curly braces instead of two."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> <span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> I will be escaped <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">}}</span></span>\n<span class=\"token mustache\"><span class=\"token punctuation\">{{{</span> <span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> I will render as it is <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">}}}</span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another way to render HTML without escaping, is to make use of the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"safe"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> safe(<span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> I will render as it is <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">'</span></span>) <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"safe"}]},{"type":"text","value":" method has no advantage over three curly braces. However, it becomes helpful, when you are creating your own global methods and want to render HTML from them. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View<span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> View<span class=\"token punctuation\">.</span><span class=\"token constant\">GLOBALS</span><span class=\"token punctuation\">.</span><span class=\"token function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;input type=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" value=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" /></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And now you can use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" global inside the standard double curly braces."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> input(<span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\">text</span><span class=\"token punctuation\">'</span></span>, <span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\">foo</span><span class=\"token punctuation\">'</span></span>) <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"csrftoken"},"children":[{"type":"element","tag":"a","props":{"href":"#csrftoken","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"csrfToken"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Value of the CSRF token generated for the current HTTP request."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available only, when the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/shield"}]},{"type":"text","value":" package is installed and CSRF protection is enabled."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> csrfToken <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following are the methods to render the CSRF token inside a hidden input field or the meta tag."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token comment\">{{-- Renders the input field --}}</span>\n<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> csrfField() <span class=\"token punctuation\">}}</span></span>\n\n<span class=\"token comment\">{{-- Renders the meta tag --}}</span>\n<span class=\"token mustache\"><span class=\"token punctuation\">{{</span> csrfMeta <span class=\"token punctuation\">}}</span></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"adding-your-own"},"children":[{"type":"element","tag":"a","props":{"href":"#adding-your-own","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Adding your own"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can add your own globals by using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View.global"}]},{"type":"text","value":" method. Since, globals needs to be registered only once, it is best to register them inside a provider or a preloaded file."}]},{"type":"element","tag":"h3","props":{"id":"inside-a-provider"},"children":[{"type":"element","tag":"a","props":{"href":"#inside-a-provider","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Inside a Provider"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"providers/AppProvider.ts"}]},{"type":"text","value":" file and replace its content with the following snippet"}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" statement is inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"boot"}]},{"type":"text","value":" method. This is required because, when the provider file is loaded by AdonisJS, at that time the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View"}]},{"type":"text","value":" is not registered and hence top level imports will not work."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"providers/AppProvider.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IocContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@adonisjs/fold'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">protected</span> container<span class=\"token operator\">:</span> IocContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">boot</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> View <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ioc:Adonis/Core/View'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span>\n<span class=\"dimer-highlight-code-line\">    View<span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"inside-preloaded-file"},"children":[{"type":"element","tag":"a","props":{"href":"#inside-preloaded-file","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Inside preloaded file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Provider"}]},{"type":"text","value":" approach seems complicated, then you can simply create a preloaded file inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start"}]},{"type":"text","value":" folder. Run the following command to create one."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:prldfile viewGlobals\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and paste the following code snippet inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/viewGlobals.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> View <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/View'</span>\n\nView<span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}
