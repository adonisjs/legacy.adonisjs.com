{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Views API"}]},{"type":"element","tag":"h1","props":{"id":"views-api"},"children":[{"type":"element","tag":"a","props":{"href":"#views-api","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Views API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This document covers the methods and properties available on the View module."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#render"},"children":[{"type":"text","value":"render"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#mount"},"children":[{"type":"text","value":"mount"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#unmount"},"children":[{"type":"text","value":"unmount"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#registertemplate"},"children":[{"type":"text","value":"registerTemplate"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#registertag"},"children":[{"type":"text","value":"registerTag"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#getrenderer"},"children":[{"type":"text","value":"getRenderer"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"render"},"children":[{"type":"element","tag":"a","props":{"href":"#render","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"render"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"render"}]},{"type":"text","value":" method renders a given view and optionally accepts a state object. This is the method, you see yourself using most of the times."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> View <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/View'</span>\n\nView<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'welcome'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> greeting<span class=\"token operator\">:</span> <span class=\"token string\">'Hello world'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"mount"},"children":[{"type":"element","tag":"a","props":{"href":"#mount","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"mount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"mount"}]},{"type":"text","value":" method allows you to mount directories with a unique name and then later you can render views from the mounted directory. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> View <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/View'</span>\n<span class=\"token keyword\">import</span> Application <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Application'</span>\n\nView<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> Application<span class=\"token punctuation\">.</span><span class=\"token function\">resourcesPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin/views'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above code mounts "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"resources/admin/views"}]},{"type":"text","value":" directory under the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"admin"}]},{"type":"text","value":" disk name. You can render views from this directory as follows:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token tag\"><span class=\"token function\">@component</span>(<span class=\"token string\"><span class=\"token punctuation\">'</span>admin::button<span class=\"token punctuation\">'</span></span>)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Everything before the double colon "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"::"}]},{"type":"text","value":" is the mounted disk name and afterwards is the relative view path."}]},{"type":"element","tag":"h2","props":{"id":"unmount"},"children":[{"type":"element","tag":"a","props":{"href":"#unmount","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"unmount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The opposite of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"mount"}]},{"type":"text","value":" method. This methods removes the mounted directory."}]},{"type":"element","tag":"h2","props":{"id":"registertemplate"},"children":[{"type":"element","tag":"a","props":{"href":"#registertemplate","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"registerTemplate"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Method to register an in-memory templates. Make sure to also read the dedicated guide on "},{"type":"element","tag":"a","props":{"href":"/guides/views/in-memory-views"},"children":[{"type":"text","value":"in memory views"}]}]},{"type":"element","tag":"h2","props":{"id":"registertag"},"children":[{"type":"element","tag":"a","props":{"href":"#registertag","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"registerTag"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Method to register your custom tags to the templating layer. Again, it is recommended to read the "},{"type":"element","tag":"a","props":{"href":"/guides/views/creating-svg-tag"},"children":[{"type":"text","value":"dedicated guides"}]},{"type":"text","value":" for in-depth understanding."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View<span class=\"token punctuation\">.</span><span class=\"token function\">registerTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  block<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  tagName<span class=\"token operator\">:</span> <span class=\"token string\">'svg'</span><span class=\"token punctuation\">,</span>\n  seekable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">compile</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// implementation goes here.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"getrenderer"},"children":[{"type":"element","tag":"a","props":{"href":"#getrenderer","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"getRenderer"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"getRenderer"}]},{"type":"text","value":" method returns an instance of the "},{"type":"element","tag":"a","props":{"href":"https://github.com/edge-js/edge/blob/develop/src/Renderer/index.ts"},"children":[{"type":"text","value":"Renderer class"}]},{"type":"text","value":", which inturn can be used to render views."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"renderer"}]},{"type":"text","value":" has only two methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"render"}]},{"type":"text","value":": Similar to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View.render"}]},{"type":"text","value":", but also passes the shared state of the renderer with the view."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"share"}]},{"type":"text","value":": A method to accept shared state. You can call this method as many times as you want and values will be merged to a single object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"View<span class=\"token punctuation\">.</span><span class=\"token function\">getRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}]}]}
