{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Interpolation"}]},{"type":"element","tag":"h1","props":{"id":"interpolation"},"children":[{"type":"element","tag":"a","props":{"href":"#interpolation","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Interpolation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Interpolation allows you to write Javascript expressions within a markup language like HTML. The output of the Javascript expression is concatenated to the template output value. For example:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#javascript-expressions"},"children":[{"type":"text","value":"Javascript Expressions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#raw-html"},"children":[{"type":"text","value":"Raw HTML"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ignoring-interpolation"},"children":[{"type":"text","value":"Ignoring Interpolation"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello</span> <span class=\"token mustache\"><span class=\"token punctuation\">{{</span> username <span class=\"token punctuation\">}}</span></span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assuming the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"username"}]},{"type":"text","value":" variable has value of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"virk"}]},{"type":"text","value":". The output will be as follows:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello virk<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"javascript-expressions"},"children":[{"type":"element","tag":"a","props":{"href":"#javascript-expressions","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Javascript Expressions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You are not only limited to simple variable references like "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{ username }}"}]},{"type":"text","value":". Infact, you can write almost any valid "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions"},"children":[{"type":"text","value":"JavaScript expression"}]},{"type":"text","value":" inside the curly braces. Consider the following examples:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Array.Map"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span> {{{\n  users.map((user) => `<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> ${user.name} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>`)\n}}} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Function calls"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> Hello</span> <span class=\"token mustache\"><span class=\"token punctuation\">{{</span> username.toUpperCase() <span class=\"token punctuation\">}}</span></span> <span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Ternary operator"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></span><span class=\"token mustache\"><span class=\"token punctuation\">{{</span> users.length ? users[<span class=\"token number\">0</span>].username : <span class=\"token string\"><span class=\"token punctuation\">'</span><span class=\"token other\">Guest</span><span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">}}</span></span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Arithmetic expression"}]},{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></span> <span class=\"token mustache\"><span class=\"token punctuation\">{{</span> (<span class=\"token number\">2</span> + <span class=\"token number\">2</span>) * <span class=\"token number\">2</span>  <span class=\"token punctuation\">}}</span></span> <span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"raw-html"},"children":[{"type":"element","tag":"a","props":{"href":"#raw-html","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Raw HTML"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output of curly braces is escaped to prevent XSS attacks. If you want Edge to not escape the output, then you will have to make use of 3 curly braces "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{{"}]},{"type":"text","value":", also known as safe mustache."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Using mustache<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> rawHtml <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Using safe mustache <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> rawHtml <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Using mustache: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This should be red.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\nUsing safe mustache: This should be red.\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Also, you can make use of the global "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"safe"}]},{"type":"text","value":" function to render HTML without escaping it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token function\">safe</span><span class=\"token punctuation\">(</span>rawHtml<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"ignoring-interpolation"},"children":[{"type":"element","tag":"a","props":{"href":"#ignoring-interpolation","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Ignoring Interpolation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The syntax for interpolation "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{{ }}"}]},{"type":"text","value":" is majorly same across different frameworks and at times it can cause unwanted conflicts. For example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You want to use Vue.js along with Edge. The interpolation syntax for both is same and hence, Edge will evaluate the expressions before passing them to Vue. However, you can instruct Edge to ignore curly braces by prefixing the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@"}]},{"type":"text","value":" symbol."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-edge","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> Hello @</span><span class=\"token mustache\"><span class=\"token punctuation\">{{</span> name <span class=\"token punctuation\">}}</span></span><span class=\"token other\">! I am a vue fragment <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></span>\n"}]}]}]}]}
