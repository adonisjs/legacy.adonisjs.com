{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Logger"}]},{"type":"element","tag":"h1","props":{"id":"logger"},"children":[{"type":"element","tag":"a","props":{"href":"#logger","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Logger"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS uses "},{"type":"element","tag":"a","props":{"href":"https://getpino.io/#/"},"children":[{"type":"text","value":"pino logger"}]},{"type":"text","value":" for logging, since it is one of the fastest logging libraries in Node.js ecosystem and also follows the "},{"type":"element","tag":"a","props":{"href":"https://12factor.net/logs"},"children":[{"type":"text","value":"12factor app guidelines"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#usage"},"children":[{"type":"text","value":"Usage"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-adonisjs-logger-works"},"children":[{"type":"text","value":"How AdonisJS Logger works?"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logging-in-development"},"children":[{"type":"text","value":"Logging in Development"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logging-in-production"},"children":[{"type":"text","value":"Logging in Production"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#using-pino-transports"},"children":[{"type":"text","value":"Using Pino Transports"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#streaming-to-a-file"},"children":[{"type":"text","value":"Streaming to a File"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"element","tag":"a","props":{"href":"#usage","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Usage"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You need to import the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Logger"}]},{"type":"text","value":" before you can use it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A info message'</span><span class=\"token punctuation\">)</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A warning'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During an HTTP request, it is recommended to use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"logger"}]},{"type":"text","value":" instance attach to the HTTP Context. The request logger holds a unique request id to keep log messages tighter in scope."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Make sure to enabled request id generation by setting "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"generateRequestId = true"}]},{"type":"text","value":" inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/app.ts"}]},{"type":"text","value":" file."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> logger <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An info message'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'handled'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1592211987/adonisjs.com/http-logger.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"how-adonisjs-logger-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-adonisjs-logger-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How AdonisJS Logger works?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since, Node.js is a single threaded event-loop, it is very important to keep the main thread free from any extra work required to process or reformat logs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For this very reason, we opted for "},{"type":"element","tag":"a","props":{"href":"http://getpino.io/#/"},"children":[{"type":"text","value":"pino logger"}]},{"type":"text","value":", which does not perform any in-process log formatting and instead encourages you to make use a seperate process for that. In nutshell, this is how the logging works."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You can log at different levels using the Logger API, for example: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Logger.info('some message')"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The logs will be send out to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You can redirect the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":" stream to a file or use a seperate process to read and format them."}]}]},{"type":"element","tag":"h2","props":{"id":"logging-in-development"},"children":[{"type":"element","tag":"a","props":{"href":"#logging-in-development","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Logging in Development"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since logs are always written to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":", there is nothing special required in the development environment. Also, AdonisJS will automatically "},{"type":"element","tag":"a","props":{"href":"https://github.com/pinojs/pino-pretty"},"children":[{"type":"text","value":"pretty print"}]},{"type":"text","value":" the logs when "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"NODE_ENV=development"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"logging-in-production"},"children":[{"type":"element","tag":"a","props":{"href":"#logging-in-production","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Logging in Production"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In production, you would want to stream your logs to an external service like Datadog or Papertrail. Following are some of the ways to send logs to an external service."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Yes, there is an additional operational overhead of piping the stdout stream to a service. But, the trade off is worth the performance boost you receive. Make sure to check "},{"type":"element","tag":"a","props":{"href":"https://getpino.io/#/docs/benchmarks"},"children":[{"type":"text","value":"pino benchmarks"}]},{"type":"text","value":" as well."}]}]},{"type":"element","tag":"h3","props":{"id":"using-pino-transports"},"children":[{"type":"element","tag":"a","props":{"href":"#using-pino-transports","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using Pino Transports"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The simplest way to process the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":" stream is to make use of "},{"type":"element","tag":"a","props":{"href":"https://getpino.io/#/docs/transports"},"children":[{"type":"text","value":"pino transports"}]},{"type":"text","value":". All you need to do is pipe the output to the transport of your choice. For demonstration, let's try to send logs to Datadog."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"pino-datadog"}]},{"type":"text","value":" package from npm package registry."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i pino-datadog\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Start the application in production and pipe the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":" output to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"pino-datadog"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node build/server.js <span class=\"token operator\">|</span> ./node_modules/.bin/pino-datadog --key DD_API_KEY\n"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"streaming-to-a-file"},"children":[{"type":"element","tag":"a","props":{"href":"#streaming-to-a-file","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Streaming to a File"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another approach is to forward the output of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"stdout"}]},{"type":"text","value":" to a physical file on the disk and then configure your logging service to read and rotate the log files."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node build/server.js <span class=\"token operator\">>></span> app.log\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, configure your logging service to read logs from the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app.log"}]},{"type":"text","value":" file"}]}]}
