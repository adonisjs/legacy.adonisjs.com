{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Events"}]},{"type":"element","tag":"h1","props":{"id":"events"},"children":[{"type":"element","tag":"a","props":{"href":"#events","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS has an inbuilt event emitter which is slightly different (for good) from the Node.js event emitter. By the end of this guide, you will know:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#basic-example"},"children":[{"type":"text","value":"Basic Example"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#making-events-type-safe"},"children":[{"type":"text","value":"Making Events Type Safe"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#dedicated-listener-classes"},"children":[{"type":"text","value":"Dedicated Listener Classes"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works"},"children":[{"type":"text","value":"How it works?"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#trapping-events"},"children":[{"type":"text","value":"Trapping Events"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#trap-all"},"children":[{"type":"text","value":"Trap All"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#nodejs-vs-adonisjs-event-emitter"},"children":[{"type":"text","value":"Node.js vs AdonisJS Event Emitter"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#only-allows-one-argument-during-emit"},"children":[{"type":"text","value":"Only allows one argument during emit"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#api-surface"},"children":[{"type":"text","value":"API surface"}]}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to use the AdonisJS event emitter for emitting events."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Differences between AdonisJS and Node.js event emitter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Making your events type safe."}]}]},{"type":"element","tag":"h2","props":{"id":"basic-example"},"children":[{"type":"element","tag":"a","props":{"href":"#basic-example","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Basic Example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's begin by creating a new file inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start"}]},{"type":"text","value":" folder and preload it during the application boot process."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"text","value":" file"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">touch</span> start/events.ts\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, open the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".adonisrc.json"}]},{"type":"text","value":" file and add it to the array of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"preloads"}]},{"type":"text","value":". The files under the preloads array are automatically loaded by AdonisJS during the boot process."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-json","line-numbers"],"dataLine":"5"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"preloads\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"./start/routes\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"./start/kernel\"</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token string\">\"./start/events\"</span></span>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"text","value":" inside your text editor and paste the following code snippet inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Event.on"}]},{"type":"text","value":" method register a new event listener that is invoked everytime the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"new:user"}]},{"type":"text","value":" event it fired. For demonstration, let's create a route that emits this event after handling the HTTP request."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Route <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Route'</span>\n<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n\nRoute<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/register'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// create user</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>\n  Event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'User registered'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, if you visit "},{"type":"element","tag":"a","props":{"href":"http://localhost:3333/register"},"children":[{"type":"text","value":"http://localhost:3333/register"}]},{"type":"text","value":", you must see the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"console.log"}]},{"type":"text","value":" statement executed by the event listener."}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/video/upload/q_80/v1582562375/adonisjs.com/adonis-events_gexfh3.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"making-events-type-safe"},"children":[{"type":"element","tag":"a","props":{"href":"#making-events-type-safe","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Making Events Type Safe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since, the events listeners and the code emitting the events are not in the same file, it is very easy to make the mistake of sending wrong arguments to a specific event. To prevent this behavior, AdonisJS allows you to define the shape of data an event can/must receive."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the pre-existing file "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"contracts/events.ts"}]},{"type":"text","value":" to define the shape of data for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"new:user"}]},{"type":"text","value":" event."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"contract/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">EventsList</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'new:user'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, if you attempt to emit the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" as a string to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"new:user"}]},{"type":"text","value":" event, the TypeScript compiler will complain about it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_100/v1582564270/adonisjs.com/Screen_Shot_2020-02-24_at_10.40.53_PM_x0a3tn.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"dedicated-listener-classes"},"children":[{"type":"element","tag":"a","props":{"href":"#dedicated-listener-classes","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Dedicated Listener Classes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just like controllers and middleware, you can also extract the inline event listeners to their own dedicated classes. Begin by running the following ace command to create a new listener class."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:listener User\n\n<span class=\"token comment\"># ✔  create    app/Listeners/User.ts</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and replace its content with the following code snippet."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Listeners/User.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EventsList <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserListener</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handleRegistration</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> EventsList<span class=\"token punctuation\">[</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Update the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"text","value":" file to remove the inline event listener callback and instead reference the newly created listener class."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'User.handleRegistration'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"how-it-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How it works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The listeners classes allows you to keep your events file clean by extracting the logic for handling events inside their own classes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"By default, the listeners lives inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Listeners"}]},{"type":"text","value":" directory. However, you can customize inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".adonisrc.json"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"AdonisJS will create a new instance of the listener class, everytime the event is emitted."}]}]},{"type":"element","tag":"h2","props":{"id":"trapping-events"},"children":[{"type":"element","tag":"a","props":{"href":"#trapping-events","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Trapping Events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In true spirit of making testing easier in your AdonisJS applications, the event emitter allows trapping events. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">trap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> User<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once, a trap has been placed on a event, the actual event listener will not be invoked."}]},{"type":"element","tag":"h3","props":{"id":"trap-all"},"children":[{"type":"element","tag":"a","props":{"href":"#trap-all","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Trap All"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similar to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Event.trap"}]},{"type":"text","value":", you can also place a trap for all the events."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Event.trapAll"}]},{"type":"text","value":" is only called for events with no existing trap."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Event<span class=\"token punctuation\">.</span><span class=\"token function\">trap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"dimer-highlight-code-line\">Event<span class=\"token punctuation\">.</span><span class=\"token function\">trapAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token comment\">// only called for \"send:email\"</span></span><span class=\"dimer-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new:user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send:email'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"nodejs-vs-adonisjs-event-emitter"},"children":[{"type":"element","tag":"a","props":{"href":"#nodejs-vs-adonisjs-event-emitter","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Node.js vs AdonisJS Event Emitter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The event emitter of Node.js is synchronous by nature. It means every call to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"emitter.emit"}]},{"type":"text","value":" blocks the event loop and leads to non-performant codebase. On the other hand, AdonisJS uses "},{"type":"element","tag":"a","props":{"href":"https://github.com/sindresorhus/emittery"},"children":[{"type":"text","value":"emittery"}]},{"type":"text","value":", which is a light weight asynchronous event emitter."}]},{"type":"element","tag":"h3","props":{"id":"only-allows-one-argument-during-emit"},"children":[{"type":"element","tag":"a","props":{"href":"#only-allows-one-argument-during-emit","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Only allows one argument during emit"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Emittery doesn't allow multiple arguments during the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"emit"}]},{"type":"text","value":" call and suggests to use "},{"type":"element","tag":"a","props":{"href":"https://github.com/sindresorhus/emittery#can-you-support-multiple-arguments-for-emit"},"children":[{"type":"text","value":"destructuring"}]},{"type":"text","value":" instead. Having limitation for a single argument is not really a big drawback in comparison to the performance it brings into your applications."}]},{"type":"element","tag":"h3","props":{"id":"api-surface"},"children":[{"type":"element","tag":"a","props":{"href":"#api-surface","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"API surface"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We suggest you to check the API docs and do not assume identical API as the Node.js event emitter."}]}]}
