{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Form Submissions"}]},{"type":"element","tag":"h1","props":{"id":"form-submissions"},"children":[{"type":"element","tag":"a","props":{"href":"#form-submissions","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Form Submissions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS is pre-configured to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"parse"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"validate"}]},{"type":"text","value":" the HTTP request body and you do not have to install any 3rd party packages for same. In fact, AdonisJS has one of the most robust bodyparser with first class support for following content types."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#creating-the-form"},"children":[{"type":"text","value":"Creating the Form"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#reading-form-data"},"children":[{"type":"text","value":"Reading Form Data"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validating-form-data"},"children":[{"type":"text","value":"Validating Form Data"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#displaying-validation-errors"},"children":[{"type":"text","value":"Displaying Validation Errors"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#retaining-form-input-values"},"children":[{"type":"text","value":"Retaining Form Input Values"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#showing-success-message"},"children":[{"type":"text","value":"Showing Success Message"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#using-custom-messages"},"children":[{"type":"text","value":"Using Custom Messages"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#using-validator-classes"},"children":[{"type":"text","value":"Using Validator Classes"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#next-steps"},"children":[{"type":"text","value":"Next Steps"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"multipart/form-data"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"application/x-www-form-urlencoded"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"application/json"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"application/json-patch+json"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"application/vnd.api+json"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"text/plain"}]}]}]},{"type":"element","tag":"h2","props":{"id":"creating-the-form"},"children":[{"type":"element","tag":"a","props":{"href":"#creating-the-form","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Creating the Form"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"AdonisJS does not interfere with your HTML and you define the forms using the standard HTML syntax"}]},{"type":"text","value":". In other words, AdonisJS doesn't have any kind of form builders doing magic behind the scenes and hence you have the complete freedom to structure the HTML the way you want."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, following is the HTML form to create a new blog post by accepting the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"post title"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"body"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span> Create a new blog post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/posts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post title <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post body <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Create Post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can notice, the entire document is vanilla HTML with no special syntax inside it. However, you can replace the hard coded form action "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"/posts"}]},{"type":"text","value":" with a helper method "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"route"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assuming the following route declarations."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Route <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Route'</span>\n\nRoute<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/create'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PostsController.create'</span><span class=\"token punctuation\">)</span>\nRoute<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PostsController.store'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can get the route URL for storing a new post using its "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"controller.action"}]},{"type":"text","value":" name."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ route(<span class=\"token punctuation\">'</span>PostsController.store<span class=\"token punctuation\">'</span>) }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"h4","props":{"id":"what-is-the-benefit-of-using-the-route-helper"},"children":[{"type":"element","tag":"a","props":{"href":"#what-is-the-benefit-of-using-the-route-helper","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"What is the benefit of using the Route helper?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you were to change the route URL inside the routes file, you will have to remember to change the form action as well. On the other hand, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"route"}]},{"type":"text","value":" helper automates this process for you, resulting in more maintainable code."}]},{"type":"element","tag":"h2","props":{"id":"reading-form-data"},"children":[{"type":"element","tag":"a","props":{"href":"#reading-form-data","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Reading Form Data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"BodyParser"}]},{"type":"text","value":" middleware is responsible for reading the request body and making it available on the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request"}]},{"type":"text","value":" object. So, before moving any forward, let's make sure that the middleware is registered under the list of global middleware."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"text","value":" file and ensure that the file has the following line of code inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Server<span class=\"token punctuation\">.</span>middleware<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'Adonis/Core/BodyParserMiddleware'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once the middleware is in place, you can use one of the following request methods to read the request body."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.all()"}]},{"type":"text","value":" returns a merged object of the request body and the query string."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.input(field)"}]},{"type":"text","value":" returns the value of a given field."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.only([field1, field2])"}]},{"type":"text","value":" returns an object of cherry picked fields."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.except([field1, field2])"}]},{"type":"text","value":" is the opposite of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.only"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For demonstration, lets "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"console.log"}]},{"type":"text","value":" the post title and the body using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.only"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"9-10"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> view <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/create'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">store</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'body'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></span>    \n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Handled'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you visit "},{"type":"element","tag":"a","props":{"href":"http://localhost:3333/posts/create"},"children":[{"type":"text","value":"http://localhost:3333/posts/create"}]},{"type":"text","value":" and submit the form, you must see the data object being logged to the console."}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_80/v1582289486/adonisjs.com/form-submission_nlwu2x.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"validating-form-data"},"children":[{"type":"element","tag":"a","props":{"href":"#validating-form-data","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Validating Form Data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS makes it super simple to validate the form data using the inbuilt form validator. You start by defining a schema of the data that you expect from the end user and then use "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method to validate the form values against the pre-defined schema."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuing with our blog post example, following is the schema to validate the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"post title"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"body"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"2,10-17"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n<span class=\"dimer-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schema<span class=\"token punctuation\">,</span> validator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Validator'</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> view <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/create'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">store</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">const</span> postSchema <span class=\"token operator\">=</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      title<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">      body<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  </span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      schema<span class=\"token operator\">:</span> postSchema<span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">      cacheKey<span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Post created'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-tip"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Along with the runtime validations, the schema also returns "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"type information"}]},{"type":"text","value":" of the validated data."}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.create"}]},{"type":"text","value":" method initiates a new schema definition."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.string"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"schema.boolean"}]},{"type":"text","value":" and so on, you can define the expected data types."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method accepts the pre-defined schema and validates the request body against it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If validation fails, the validator will redirect the user back to the form along with the error messages and the form data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the validation succeeds, the next line of code "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"("},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"console.log(data)"}]},{"type":"text","value":" in this case)"}]},{"type":"text","value":" will be executed."}]}]},{"type":"element","tag":"h3","props":{"id":"displaying-validation-errors"},"children":[{"type":"element","tag":"a","props":{"href":"#displaying-validation-errors","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Displaying Validation Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method uses "},{"type":"element","tag":"a","props":{"href":"sessions#flash-messages"},"children":[{"type":"text","value":"flash messages"}]},{"type":"text","value":" to pass the validation errors to the template. You can access them using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"flashMessages"}]},{"type":"text","value":" global object."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is an example of displaying the error messages next to the input fields."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"],"dataLine":"14-16,24-26"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span> Create a new blog post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ route(<span class=\"token punctuation\">'</span>PostsController.store<span class=\"token punctuation\">'</span>) }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post title <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"dimer-highlight-code-line\">      @if(flashMessages.has('errors.title'))</span><span class=\"dimer-highlight-code-line\">        {{ flashMessages.get('errors.title') }}</span><span class=\"dimer-highlight-code-line\">      @endif</span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post body <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n<span class=\"dimer-highlight-code-line\">      @if(flashMessages.has('errors.body'))</span><span class=\"dimer-highlight-code-line\">        {{ flashMessages.get('errors.body') }}</span><span class=\"dimer-highlight-code-line\">      @endif</span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Create Post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you submit the form with empty fields, you will see the validation errors next to the form inputs."}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_80/v1582289924/adonisjs.com/form-validation-basics_af9pse.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"retaining-form-input-values"},"children":[{"type":"element","tag":"a","props":{"href":"#retaining-form-input-values","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Retaining Form Input Values"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currently, after the validation failure, the form inputs losses their old values and the user will have to fill the form again. However, you can prevent this behavior by also reading the input values from the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"flashMessages"}]},{"type":"text","value":" global object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"],"dataLine":"13,23"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span> Create a new blog post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ route(<span class=\"token punctuation\">'</span>PostsController.store<span class=\"token punctuation\">'</span>) }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post title <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"dimer-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ flashMessages.get(<span class=\"token punctuation\">'</span>title<span class=\"token punctuation\">'</span>) || <span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span> }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></span>      @if(flashMessages.has('errors.title'))\n        {{ flashMessages.get('errors.title') }}\n      @endif\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post body <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"dimer-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ flashMessages.get('body') || '' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></span>      @if(flashMessages.has('errors.body'))\n        {{ flashMessages.get('errors.body') }}\n      @endif\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Create Post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"showing-success-message"},"children":[{"type":"element","tag":"a","props":{"href":"#showing-success-message","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Showing Success Message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also set your own custom flash messages by using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"session.flash"}]},{"type":"text","value":" method inside the controller action. So, let's use this method to set the success message and redirect the user back to the form."}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"Controller"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"View"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Controller"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">store</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> postSchema <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    schema<span class=\"token operator\">:</span> postSchema<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"dimer-highlight-code-line\">  session<span class=\"token punctuation\">.</span><span class=\"token function\">flash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Post created successfully'</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  response<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'back'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"View"}]},{"type":"element","tag":"pre","props":{"className":["language-html","line-numbers"],"dataLine":"8-10"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span> Create a new blog post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"dimer-highlight-code-line\">  @if(flashMessages.has('success'))</span><span class=\"dimer-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ flashMessages.get('success') }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span><span class=\"dimer-highlight-code-line\">  @endif</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ route(<span class=\"token punctuation\">'</span>PostsController.store<span class=\"token punctuation\">'</span>) }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post title <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ flashMessages.get(<span class=\"token punctuation\">'</span>title<span class=\"token punctuation\">'</span>) || <span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span> }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      @if(flashMessages.has('errors.title'))\n        {{ flashMessages.get('errors.title') }}\n      @endif\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Post body <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ flashMessages.get('body') || '' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n      @if(flashMessages.has('errors.body'))\n        {{ flashMessages.get('errors.body') }}\n      @endif\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Create Post <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This time if you submit the form with the valid post title and body, you will see the success message being displayed after the redirect."}]},{"type":"element","tag":"h3","props":{"id":"using-custom-messages"},"children":[{"type":"element","tag":"a","props":{"href":"#using-custom-messages","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using Custom Messages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currently the validation error messages are not so descriptive and neither human friendly. However, you can define your own custom messages and pass them to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method, as shown below."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">store</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> postSchema <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    schema<span class=\"token operator\">:</span> postSchema<span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token string\">'title.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please enter post title'</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token string\">'body.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please enter post body'</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  session<span class=\"token punctuation\">.</span><span class=\"token function\">flash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Post created successfully'</span><span class=\"token punctuation\">)</span>\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'back'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The errors messages can also target nested fields using the dot notation syntax. For example: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"profile.user.name.required"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"using-validator-classes"},"children":[{"type":"element","tag":"a","props":{"href":"#using-validator-classes","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using Validator Classes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to keep the controllers clean and small, you can extract the validation schema and custom messages to its own dedicated validator class. So let's create a new validator by running the following ace command."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:validator Post\n\n<span class=\"token comment\"># ✔  create    app/Validators/PostValidator.ts</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and paste the following contents to it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schema<span class=\"token punctuation\">,</span> validator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Validator'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostValidator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> ctx<span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> schema <span class=\"token operator\">=</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">public</span> cacheKey <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>routeKey\n\n  <span class=\"token keyword\">public</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'title.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please enter post title'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'body.required'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please enter post body'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, you can remove the schema related code from the controller method in favor of the newly created validator."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schema<span class=\"token punctuation\">,</span> validator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Validator'</span>\n<span class=\"dimer-highlight-code-line\"><span class=\"token keyword\">import</span> PostValidator <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Validators/PostValidator'</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> view <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/create'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">store</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>PostValidator<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">&nbsp;</span><span class=\"dimer-highlight-code-line\">    session<span class=\"token punctuation\">.</span><span class=\"token function\">flash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Post created successfully'</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    response<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'back'</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"next-steps"},"children":[{"type":"element","tag":"a","props":{"href":"#next-steps","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Next Steps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We have just scratched the surface with form validation and flash messages. We also recommend you to read the dedicated guides on the following topics."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Crash course on "},{"type":"element","tag":"a","props":{"href":"sessions#flash-messages"},"children":[{"type":"text","value":"Flash messages"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/guides/validator/introduction"},"children":[{"type":"text","value":"Validator deep dive"}]}]}]}]}
