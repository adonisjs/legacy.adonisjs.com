{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Middleware"}]},{"type":"element","tag":"h1","props":{"id":"middleware"},"children":[{"type":"element","tag":"a","props":{"href":"#middleware","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Middleware"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Middleware are a series of functions that are executed before an HTTP request reaches the route handler. Using middleware, you can perform different actions like:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#middleware-flow"},"children":[{"type":"text","value":"Middleware Flow"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#global-middleware"},"children":[{"type":"text","value":"Global middleware"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#extending-types"},"children":[{"type":"text","value":"Extending Types"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#route-middleware"},"children":[{"type":"text","value":"Route Middleware"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works-1"},"children":[{"type":"text","value":"How it works?"}]}]}]}]}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"An auth middleware to check whether a user is logged in or not. If not, then cancel the request, before it reaches the controller."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A middleware to find the user country from their ip address and then pass it along to the controller."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A middleware to log HTTP requests."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Or a middleware to transform the response body."}]}]},{"type":"element","tag":"h2","props":{"id":"middleware-flow"},"children":[{"type":"element","tag":"a","props":{"href":"#middleware-flow","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Middleware Flow"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1582969262/adonisjs.com/http-middleware_wvb8mg.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Middleware are executed on every new HTTP request."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"They are executed in sequence from left to right."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If one middleware decided to abort the request, then all other middleware along with the route handler are not executed."}]}]},{"type":"element","tag":"h2","props":{"id":"global-middleware"},"children":[{"type":"element","tag":"a","props":{"href":"#global-middleware","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Global middleware"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Global middleware are executed on every HTTP request in the same order as they are registered. You create global middleware for actions that you want to execute on every request."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS does not execute global middleware for requests that does not have a registered route. This means, if you create a global middleware and a request comes in for an non-existing route, then the middleware will never be executed."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For demonstration, let's create a middleware for finding the user country from their IP address. The middleware lives inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Middleware"}]},{"type":"text","value":" directory and just like controllers, they are also vanilla JavaScript classes."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the following ace command to create a new middleware file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:middleware DetectUserCountry\n\n<span class=\"token comment\"># âœ”  create    app/Middleware/DetectUserCountry.ts</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"geoip-lite"}]},{"type":"text","value":". An npm dependency to lookup user location from Ip Address."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i geoip-lite @types/geoip-lite\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and replace its contents with the following code snippet."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Middleware/DetectUserCountry.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n<span class=\"token keyword\">import</span> geoip <span class=\"token keyword\">from</span> <span class=\"token string\">'geoip-lite'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DetectUserCountry</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ip <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> country <span class=\"token operator\">=</span> geoip<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n    request<span class=\"token punctuation\">.</span>country <span class=\"token operator\">=</span> country<span class=\"token operator\">?.</span>country\n    \n    <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Register the middleware inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"3"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Server<span class=\"token punctuation\">.</span>middleware<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'Adonis/Core/BodyParserMiddleware'</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">  <span class=\"token string\">'App/Middleware/DetectUserCountry'</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, create a route to display the user detected country."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span>country\n    <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Your country is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span>country<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">:</span> <span class=\"token string\">'Unable to detect country'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"what-just-happened"},"children":[{"type":"element","tag":"a","props":{"href":"#what-just-happened","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"What just happened?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A lot is going on above, let's decode it step by step."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"geoip-lite"}]},{"type":"text","value":", we attempt lookup the user country from their ip address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Next, we set the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"country"}]},{"type":"text","value":" on the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request"}]},{"type":"text","value":" object. You will get a TypeScript error when trying to add a dynamic property, but let's ignore that for now and we will fix it later."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After the job of middleware is completed, you must call the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"next"}]},{"type":"text","value":" function. Doing so, will execute the next middleware in the chain and finally the route handler."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finally, you will have to register the middleware inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"text","value":". Just like controllers, there is no need to import the middleware file, you can pass it as a string reference."}]}]},{"type":"element","tag":"h2","props":{"id":"extending-types"},"children":[{"type":"element","tag":"a","props":{"href":"#extending-types","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Extending Types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are following along this guide, you would have noticed that TypeScript complains when trying to add a runtime property "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"country"}]},{"type":"text","value":" to the request object as shown in the following image."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1582462569/adonisjs.com/TypeScript-request-extend-complain.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you have used TypeScript previously, you may have faced a similar situation when trying to extend values at runtime. Infact, this is true for any statically typed language."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since, one of the goals of AdonisJS is to be extensible, we have put enough thoughts into letting you easily extend static types. To do so, let's create a new file "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.ts"}]},{"type":"text","value":" inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"contracts"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">touch</span> contracts/request.ts\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and paste the following code snippet inside it. After that, TypeScript will stop complaining."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'@ioc:Adonis/Core/Request'</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequestContract</span> <span class=\"token punctuation\">{</span>\n    country<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h4","props":{"id":"how-it-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How it works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In order for any object or a class to be extendible, you will have to type it to an interface. This concept is also known as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"programming to an interface"}]},{"type":"text","value":" or "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"loosely coupled code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Next, you can leverage the "},{"type":"element","tag":"a","props":{"href":"https://www.typescriptlang.org/docs/handbook/declaration-merging.html"},"children":[{"type":"text","value":"declaration merging"}]},{"type":"text","value":" feature of TypeScript to merge properties of two interfaces that belongs to a single module and has same name."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Voila!, you have successfully extended a type. All of the AdonisJS codebase is loosely coupled and can be extended in the same fashion."}]}]},{"type":"element","tag":"h2","props":{"id":"route-middleware"},"children":[{"type":"element","tag":"a","props":{"href":"#route-middleware","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Route Middleware"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Route middleware works the same way as the global middleware, its just that you execute them on specific routes vs executing them on every single HTTP request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A great candidate of this is an Access control middleware, that you want to apply only on a subset of routes. For demonstration, let's create a middleware to selectively enforce access control."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first step is to create and register the middleware inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"text","value":" file. This time we need to register it as a named middleware."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the following command to create a new middleware"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:middleware Acl\n\n<span class=\"token comment\"># âœ”  create    app/Middleware/Acl.ts</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created middleware file and paste following contents to it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Middleware/Acl.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Acl</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    allowedRoles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" enforces \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>allowedRoles<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" roles</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Register it as a named middleware. The object key is the alias that we will later reference on the route and object value is the namespace to the middleware class."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/kernel.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Server<span class=\"token punctuation\">.</span>middleware<span class=\"token punctuation\">.</span><span class=\"token function\">registerNamed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  acl<span class=\"token operator\">:</span> <span class=\"token string\">'App/Middleware/Acl'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, create couple of dummy routes to test the functionality."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'List posts'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string\">'acl:user,moderator'</span><span class=\"token punctuation\">)</span>\n\nRoute\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'subscribers'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'List subscribers'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string\">'acl:moderator,admin'</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_80/v1582467510/adonisjs.com/route-named-middleware.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"how-it-works-1"},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works-1","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How it works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A route middleware has to be registered first using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Server.middleware.registerNamed"}]},{"type":"text","value":" method and then you can use it on routes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When calling "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route.middleware"}]},{"type":"text","value":", you can pass arguments to the middleware by seperating them with a colon "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":":"}]},{"type":"text","value":" expression."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The arguments are passed to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"handle"}]},{"type":"text","value":" function as a 3rd argument."}]}]}]}
