{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"h1","props":{"id":"exception-handling"},"children":[{"type":"element","tag":"a","props":{"href":"#exception-handling","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS allows you to globally handle exceptions that occurred during an HTTP request. By the end of this guide, you will know:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#global-exception-handler"},"children":[{"type":"text","value":"Global Exception Handler"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#the-handle-method"},"children":[{"type":"text","value":"The handle method"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#the-report-method"},"children":[{"type":"text","value":"The report method"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#error-reporting"},"children":[{"type":"text","value":"Error Reporting"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#self-handled-exceptions"},"children":[{"type":"text","value":"Self Handled Exceptions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#status-pages"},"children":[{"type":"text","value":"Status Pages"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to catch all exceptions at a single location."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using exceptions as control flow."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Raising exceptions that can handle themselves."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Status pages, development only error pages and more."}]}]},{"type":"element","tag":"h2","props":{"id":"global-exception-handler"},"children":[{"type":"element","tag":"a","props":{"href":"#global-exception-handler","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Global Exception Handler"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The global exception handler lives inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"app/Exceptions/Handler.ts"}]},{"type":"text","value":" file. You can customize it's location by editing the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"exceptionHandlerNamespace"}]},{"type":"text","value":" value inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".adonisrc.json"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":".adonisrc.json"}]},{"type":"element","tag":"pre","props":{"className":["language-json","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"exceptionHandlerNamespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"App/Exceptions/Handler\"</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The exception handler class extends the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Adonis/Core/HttpExceptionHandler"}]},{"type":"text","value":" provided by AdonisJS. All of the functionality we are about to discuss are inherited from the base "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"HttpExceptionHandler"}]},{"type":"text","value":" class."}]},{"type":"element","tag":"h2","props":{"id":"the-handle-method"},"children":[{"type":"element","tag":"a","props":{"href":"#the-handle-method","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"handle"}]},{"type":"text","value":" method"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"handle"}]},{"type":"text","value":" method is invoked everytime an unhandled exception is raised within an HTTP request cycle. The handle method receives an error object, along with the "},{"type":"element","tag":"a","props":{"href":"introduction#http-context"},"children":[{"type":"text","value":"HTTP context"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can let the base exception handler handle the exceptions for you, unless, you want to manually handle a specific exception. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n<span class=\"token keyword\">import</span> HttpExceptionHandler <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpExceptionHandler'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpExceptionHandler</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'E_VALIDATION_FAILURE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">422</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"the-report-method"},"children":[{"type":"element","tag":"a","props":{"href":"#the-report-method","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"report"}]},{"type":"text","value":" method"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"report"}]},{"type":"text","value":" method is meant to report/log exceptions for debugging. By default, the base exception handler will use the "},{"type":"element","tag":"a","props":{"href":"logger"},"children":[{"type":"text","value":"application logger"}]},{"type":"text","value":" to log all exceptions. However, you can also implement this method to manually handle reporting in a different way."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n<span class=\"token keyword\">import</span> HttpExceptionHandler <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpExceptionHandler'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpExceptionHandler</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">report</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Using rollbar instead of application logger</span>\n    Rollbar<span class=\"token punctuation\">.</span><span class=\"token function\">critical</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"error-reporting"},"children":[{"type":"element","tag":"a","props":{"href":"#error-reporting","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Error Reporting"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The default "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"report"}]},{"type":"text","value":" method will report all the exceptions reaching the global exception handler. Getting notified about every exception can get annoying, specially, when there is no need to act on them. For this very same reason, the base exception handler allows you to blacklist the error codes or the status codes from being reported."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpExceptionHandler</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">protected</span> ignoreCodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token string\">'E_ROUTE_NOT_FOUND'</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">]</span></span>\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">protected</span> ignoreStatuses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token number\">400</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token number\">422</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token number\">401</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">]</span></span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ignoreCodes"}]},{"type":"text","value":" takes an array of error codes and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ignoreStatuses"}]},{"type":"text","value":" takes an array of error statuses to ignore. You can choose either or them, based on your convenience."}]},{"type":"element","tag":"h2","props":{"id":"self-handled-exceptions"},"children":[{"type":"element","tag":"a","props":{"href":"#self-handled-exceptions","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Self Handled Exceptions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS provides a great way to raise exceptions that can handle themselves by defining the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"handle"}]},{"type":"text","value":" method on the exception class itself. A great example of this is the "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/blob/develop/src/ValidationException/index.ts"},"children":[{"type":"text","value":"ValidationException"}]},{"type":"text","value":" raised by the validator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can create your own custom exceptions by running the following ace command."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:exception UnAuthorized\n<span class=\"token comment\"># ✔  create    app/Exceptions/UnAuthorizedException.ts</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file in your text editor and implement the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"handle"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Exceptions/UnAuthorizedException.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Exception <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@poppinss/utils'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UnAuthorizedException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Implement the handle method to manually handle this exception.\n   * Otherwise it will be handled by the global exception handler.\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> response <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response\n      <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;h1>Sorry you are not allowed to view this page&lt;/h1>'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, create a dummy route to test the exception behavior."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Route <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Route'</span>\n<span class=\"token keyword\">import</span> UnAuthorizedException <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Exceptions/UnAuthorizedException'</span>\n\nRoute<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnAuthorizedException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Not allowed'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you visit "},{"type":"element","tag":"a","props":{"href":"http://localhost:3333"},"children":[{"type":"text","value":"http://localhost:3333"}]},{"type":"text","value":", you must see a message similar to the following screenshot."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1582479120/adonisjs.com/self-handled-exception.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"status-pages"},"children":[{"type":"element","tag":"a","props":{"href":"#status-pages","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Status Pages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The base exception handler let you to configure templates to be rendered for specific status codes. For example: Defining a template for "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"404"}]},{"type":"text","value":" status code and a template for series of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"500"}]},{"type":"text","value":" status codes."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n<span class=\"token keyword\">import</span> HttpExceptionHandler <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpExceptionHandler'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpExceptionHandler</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">protected</span> statusPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token string\">'404'</span><span class=\"token operator\">:</span> <span class=\"token string\">'errors.not-found'</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token string\">'500..599'</span><span class=\"token operator\">:</span> <span class=\"token string\">'errors.server-error'</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The exception handler will render "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"errors.not-found"}]},{"type":"text","value":" template everytime an exception with status code "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"404"}]},{"type":"text","value":" is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using the range expression "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".."}]},{"type":"text","value":", we assign "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"errors.server-error"}]},{"type":"text","value":" template for "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"500"}]},{"type":"text","value":" to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"599"}]},{"type":"text","value":" status codes."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default the status pages are not rendered during development. However, you can turn them on using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"disableStatusPagesInDevelopment"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"2"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpExceptionHandler</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">protected</span> disableStatusPagesInDevelopment <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span>\n  <span class=\"token keyword\">protected</span> statusPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'404'</span><span class=\"token operator\">:</span> <span class=\"token string\">'errors.not-found'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'500..599'</span><span class=\"token operator\">:</span> <span class=\"token string\">'errors.server-error'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]}
