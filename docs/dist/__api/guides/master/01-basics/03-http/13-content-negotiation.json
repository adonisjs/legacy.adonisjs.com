{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Content Negotiation"}]},{"type":"element","tag":"h1","props":{"id":"content-negotiation"},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Content Negotiation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation"},"children":[{"type":"text","value":"Content negotiation"}]},{"type":"text","value":" is the mechanism that is used for serving "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"different representations of a resource"}]},{"type":"text","value":" from the same URL. The content negotiation is done using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Accept"}]},{"type":"text","value":" HTTP header and in this guide you will learn how content negotiation works in AdonisJS."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#when-to-use-content-negotiation"},"children":[{"type":"text","value":"When to use content negotiation?"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation-in-exception-handler"},"children":[{"type":"text","value":"Content Negotiation in Exception Handler"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation-in-validation-exception"},"children":[{"type":"text","value":"Content Negotiation in Validation Exception"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"when-to-use-content-negotiation"},"children":[{"type":"element","tag":"a","props":{"href":"#when-to-use-content-negotiation","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"When to use content negotiation?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Content negotiation is helpful, when you (the webservice provider) decides to support different representations of a single resources. For example: Creating an API sever, that can respond both with XML and JSON."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The client sets the appropriate "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Accept"}]},{"type":"text","value":" header and server uses its value to respond with the correct response type. In AdonisJS, you can use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.accepts"}]},{"type":"text","value":" method to find the best possible response type for a given HTTP request."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpContextContract <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">index</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request<span class=\"token punctuation\">,</span> view <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HttpContextContract<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'Adonis 101'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n<span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">accepts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">case</span> <span class=\"token string\">'html'</span><span class=\"token operator\">:</span></span><span class=\"dimer-highlight-code-line\">        <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/index'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">case</span> <span class=\"token string\">'json'</span><span class=\"token operator\">:</span></span><span class=\"dimer-highlight-code-line\">        <span class=\"token keyword\">return</span> posts</span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></span><span class=\"dimer-highlight-code-line\">        <span class=\"token keyword\">return</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts/index'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["embed","video"]},"children":[{"type":"element","tag":"video","props":{"controls":true},"children":[{"type":"element","tag":"source","props":{"src":"https://res.cloudinary.com/adonis-js/video/upload/q_80/v1582537642/adonisjs.com/adonis-negotiation_nemsvr.mp4","type":"video/mp4"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"content-negotiation-in-exception-handler"},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation-in-exception-handler","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Content Negotiation in Exception Handler"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/adonis-framework/blob/develop/src/HttpExceptionHandler/index.ts#L177"},"children":[{"type":"text","value":"base exception handler"}]},{"type":"text","value":" of AdonisJS also uses content negotiation for returning errors in the correct format."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If HTML"}]},{"type":"text","value":": Render status pages or return error as an HTML string."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If JSON"}]},{"type":"text","value":": Render error as an error object"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If JSONAPI"}]},{"type":"text","value":": Render error in the format as per the "},{"type":"element","tag":"a","props":{"href":"https://jsonapi.org/format/#errors"},"children":[{"type":"text","value":"JSONAPI spec"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"content-negotiation-in-validation-exception"},"children":[{"type":"element","tag":"a","props":{"href":"#content-negotiation-in-validation-exception","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Content Negotiation in Validation Exception"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/blob/develop/src/Bindings/Request.ts#L32"},"children":[{"type":"text","value":"AdonisJS validator"}]},{"type":"text","value":" also use content negotiation for returning validation error messages in the correct format."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If HTML"}]},{"type":"text","value":": Use session flash messages for passing errors to the form and redirect the request."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If JSON"}]},{"type":"text","value":": Return errors as an array of objects."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"If JSONAPI"}]},{"type":"text","value":": Returns errors as per the "},{"type":"element","tag":"a","props":{"href":"https://jsonapi.org/format/#errors"},"children":[{"type":"text","value":"JSONAPI spec"}]},{"type":"text","value":"."}]}]}]}
