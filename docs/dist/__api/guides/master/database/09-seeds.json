{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Database seeding"}]},{"type":"element","tag":"h1","props":{"id":"database-seeding"},"children":[{"type":"element","tag":"a","props":{"href":"#database-seeding","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Database seeding"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Database seeding is a way to setup your application with some initial data that is required to run and use the application. For example:"}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#running-seeders"},"children":[{"type":"text","value":"Running seeders"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#development-only-seeders"},"children":[{"type":"text","value":"Development only seeders"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#idempotent-operations"},"children":[{"type":"text","value":"Idempotent operations"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-database-connection"},"children":[{"type":"text","value":"Customizing database connection"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Creating a seeder to insert countries, states and cities before deploying and running your application."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Or a seeder to insert users inside the database for local development."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In AdonisJS, the seeders are stored inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"database/seeders"}]},{"type":"text","value":" directory. You can create seeders manually or run the following ace command to create one for you."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:seeder User\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The seeder file is a standard Javascript class as shown in the following example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"database/seeders/UserSeeder.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSeeder <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Seeder'</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserSeeder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSeeder</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">createMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        email<span class=\"token operator\">:</span> <span class=\"token string\">'virk@adonisjs.com'</span><span class=\"token punctuation\">,</span>\n        password<span class=\"token operator\">:</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        email<span class=\"token operator\">:</span> <span class=\"token string\">'romain@adonisjs.com'</span><span class=\"token punctuation\">,</span>\n        password<span class=\"token operator\">:</span> <span class=\"token string\">'supersecret'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As you can see, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"UserSeeder"}]},{"type":"text","value":" is a standard Javascript class extending the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"BaseSeeder"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Within the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"run"}]},{"type":"text","value":" method, you can execute the database operations."}]}]},{"type":"element","tag":"h2","props":{"id":"running-seeders"},"children":[{"type":"element","tag":"a","props":{"href":"#running-seeders","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Running seeders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can execute all or selected database seeders as shown below:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token comment\"># runs all</span>\nnode ace db:seed\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token comment\"># runs database/seeders/UserSeeder</span>\nnode ace db:seed --files<span class=\"token operator\">=</span>UserSeeder\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is also an interactive mode to manually select one or more seeders to execute."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace db:seed -i\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"development-only-seeders"},"children":[{"type":"element","tag":"a","props":{"href":"#development-only-seeders","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Development only seeders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lucid allows you to mark your certain seeder files to be available only during the development phase. This ensures that by mistake you are not seeding your production database with dummy data."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSeeder <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Seeder'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserSeeder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSeeder</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> developmentOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"developmentOnly"}]},{"type":"text","value":" flag ensures that this file is only executed when "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"process.env.NODE_ENV = 'development'"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"idempotent-operations"},"children":[{"type":"element","tag":"a","props":{"href":"#idempotent-operations","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Idempotent operations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unlike migrations, there is no tracking system in place for the database seeders. In other words, executing a seeder multiple times will perform the inserts multiple times as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Based upon the nature of a seeder, you may or may not want this behavior. For example:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It is okay to run a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"PostSeeder"}]},{"type":"text","value":" for multiple times and increase the number of posts you have in the database."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"On the other hand, you would want the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"CountrySeeder"}]},{"type":"text","value":" to perform inserts only once. These kind of seeders are idempotent in nature."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fortunately, Lucid models has inbuilt support for idempotent operations using methods like "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"updateOrCreate"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"fetchOrCreateMany"}]},{"type":"text","value":". Continuing with the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"CountrySeeder"}]},{"type":"text","value":", following is an example of creating countries only once."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSeeder <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Seeder'</span>\n<span class=\"token keyword\">import</span> Country <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/Country'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CountrySeeder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSeeder</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> uniqueKey <span class=\"token operator\">=</span> <span class=\"token string\">'isoCode'</span>\n\n    <span class=\"token keyword\">await</span> Country<span class=\"token punctuation\">.</span><span class=\"token function\">updateOrCreateMany</span><span class=\"token punctuation\">(</span>uniqueKey<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        isoCode<span class=\"token operator\">:</span> <span class=\"token string\">'IN'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">'India'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        isoCode<span class=\"token operator\">:</span> <span class=\"token string\">'FR'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">'France'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        isoCode<span class=\"token operator\">:</span> <span class=\"token string\">'TH'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">' Thailand'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the above example, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"updateOrCreateMany"}]},{"type":"text","value":" method will look for existing rows inside the database using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"isoCode"}]},{"type":"text","value":" code and only inserts the missing ones and hence running the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"CountrySeeder"}]},{"type":"text","value":" for multiple times will not insert duplicate rows."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-tip"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Learn more about the other idempotent methods "},{"type":"element","tag":"a","props":{"href":"/guides/models/crud-operations#find-or-create"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"customizing-database-connection"},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-database-connection","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Customizing database connection"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:seed"}]},{"type":"text","value":" command accepts an optional "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"--connection"}]},{"type":"text","value":" flag and forwards it to the seeder files as a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"connection"}]},{"type":"text","value":" property. From there on, you can use this property to set the appropriate connection during your models interactions. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSeeder <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Seeder'</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserSeeder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSeeder</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      email<span class=\"token operator\">:</span> <span class=\"token string\">'virk@adonisjs.com'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      connection<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 👈</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now you can specify the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"--connection"}]},{"type":"text","value":" flag on your "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:seed"}]},{"type":"text","value":" command and the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"UserSeeder"}]},{"type":"text","value":" will use it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace db:seed --connection<span class=\"token operator\">=</span>tenant-1\n"}]}]}]}]}
