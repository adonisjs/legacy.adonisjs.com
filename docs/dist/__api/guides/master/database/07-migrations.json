{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Schema Migrations"}]},{"type":"element","tag":"h1","props":{"id":"schema-migrations"},"children":[{"type":"element","tag":"a","props":{"href":"#schema-migrations","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Schema Migrations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So far you have learned about the ways to fetch or persist data using the database query builder. In this guide, we take a step further and explore schema migrations for "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"creating/altering"}]},{"type":"text","value":" database tables."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#migrations-overview"},"children":[{"type":"text","value":"Migrations Overview"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#using-a-gui-application"},"children":[{"type":"text","value":"Using a GUI Application"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#custom-sql-scripts"},"children":[{"type":"text","value":"Custom SQL Scripts"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#using-schema-migrations"},"children":[{"type":"text","value":"Using Schema Migrations"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-first-migration"},"children":[{"type":"text","value":"Creating Your First Migration"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works"},"children":[{"type":"text","value":"How it works?"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#changing-existing-migrations"},"children":[{"type":"text","value":"Changing Existing Migrations"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-rollback-works"},"children":[{"type":"text","value":"How rollback works?"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#avoiding-rollbacks"},"children":[{"type":"text","value":"Avoiding Rollbacks"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#alter-example"},"children":[{"type":"text","value":"Alter example"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#migrations-config"},"children":[{"type":"text","value":"Migrations Config"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By the end of this guide, you will know:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is schema migrations and how it works"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using the Lucid Javascript API to create, alter or delete tables."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Ace commands to run or rollback migrations."}]}]},{"type":"element","tag":"h2","props":{"id":"migrations-overview"},"children":[{"type":"element","tag":"a","props":{"href":"#migrations-overview","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Migrations Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Database "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Schema_migration"},"children":[{"type":"text","value":"schema migrations"}]},{"type":"text","value":" is one of the most confusing topics in software programming. Many times individuals don't even understand the need of using migrations vs manually creating database tables. So, let's take a step backward and explore the possible options for creating/modifying tables inside a database."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS uses "},{"type":"element","tag":"a","props":{"href":"https://knexjs.org/#Schema-Building"},"children":[{"type":"text","value":"Knex.js"}]},{"type":"text","value":" behind the scene. Ensure to check out their documentation to see a full list of column types and modifier methods."}]}]},{"type":"element","tag":"h3","props":{"id":"using-a-gui-application"},"children":[{"type":"element","tag":"a","props":{"href":"#using-a-gui-application","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using a GUI Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The simplest way to create database tables is to make use of a GUI application like Sequel Pro, Table plus and so on. These applications are great during the development phase, however, they have some short-comings during the production workflow."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need to expose your database server to the internet, so that the GUI application on your computer can connect to the production database."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You cannot tie the database changes to your deployment workflow. Every deployment impacting the database will require manual intervention."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Their is no history of your tables. You do not know, when and how a database modification was done."}]}]},{"type":"element","tag":"h3","props":{"id":"custom-sql-scripts"},"children":[{"type":"element","tag":"a","props":{"href":"#custom-sql-scripts","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Custom SQL Scripts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another option is to create SQL scripts and run them during the deployment process. However, you will have to manually build a tracking system to ensure that you are not running the previously ran SQL scripts. For example:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You write a SQL script to create a new "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You run this script as part of the deployment workflow. However, you have to make sure that the next deployment must ignore the previously executed sql script."}]}]},{"type":"element","tag":"h3","props":{"id":"using-schema-migrations"},"children":[{"type":"element","tag":"a","props":{"href":"#using-schema-migrations","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Using Schema Migrations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Schema migrations addresses the above issues and offers a robust API for evolving and tracking database changes. There are many tools available for schema migrations ranging from framework agnostic tools like "},{"type":"element","tag":"a","props":{"href":"https://flywaydb.org/"},"children":[{"type":"text","value":"flywaydb"}]},{"type":"text","value":" to framework specific tooling offered by Rails, Laravel and so on."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similarly, AdonisJS also has its own migrations system. You can create/modify database by just writing Javascript."}]},{"type":"element","tag":"h2","props":{"id":"creating-your-first-migration"},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-first-migration","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Creating Your First Migration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's begin by executing the following ace command to create a new migration file."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AdonisJS uses the compiled Javascript code for running migrations. So make sure, that you are compiling your project in a separate terminal window using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace serve --watch"}]},{"type":"text","value":" command."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:migration <span class=\"token function\">users</span>\n<span class=\"token comment\"># ✔  create    database/migrations/1584350623957_users.ts</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file inside the text editor and replace its content with the following code snippet."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSchema <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Schema'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Users</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSchema</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">protected</span> tableName <span class=\"token operator\">=</span> <span class=\"token string\">'users'</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">up</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">createTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">increments</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">primary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unique</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNullable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNullable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">timestamps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">down</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">dropTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableName<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Migrations are executed against the compiled Javascript code. So, make sure to run one of the following ace commands to keep the compiled output upto date."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token comment\"># watch &amp; re-compile</span>\nnode ace build --watch\n\n<span class=\"token comment\"># watch, re-compile &amp; start http server</span>\nnode ace serve --watch\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, run the following ace command to execute the instructions for creating the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace migration:run\n\n<span class=\"token comment\"># Migrations source base dir: build</span>\n<span class=\"token comment\"># Last compiled at: Mar 31, 2020, 4:11 PM</span>\n\n<span class=\"token comment\"># completed database/migrations/1584350623957_users (batch: 1) 👈</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Congratulations! You have just created and executed your first migration. If you re-run the same command, Lucid will not execute the migration file, since it has already been executed."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace migration:run\n\n<span class=\"token comment\"># Already upto date 👈</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"how-it-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How it works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"make:migration"}]},{"type":"text","value":" command creates a new migration file prefixed with the timestamp. The timestamp is important, because the migrations are executed in the ascending order by name."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Migration files are not only limited to creating a new table. You can also "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"alter"}]},{"type":"text","value":" table, define database triggers and so on."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"migration:run"}]},{"type":"text","value":" command executes all the pending migrations. Pending migrations are those, which are never executed using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"migration:run"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A migration file is either in a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" state or in "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":" state."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once a migration file has been successfully executed, it will be tracked inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"adonis_schema"}]},{"type":"text","value":" database table to avoid running it for multiple times."}]}]},{"type":"element","tag":"h2","props":{"id":"changing-existing-migrations"},"children":[{"type":"element","tag":"a","props":{"href":"#changing-existing-migrations","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Changing Existing Migrations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Occasionally you will make mistakes when writing a migration. If you have already run the migration using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"migration:run"}]},{"type":"text","value":" command, then you cannot just edit the file and re-run it, since the file has been tracked under the list of completed migrations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead, you can rollback the migration by running the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"migration:rollback"}]},{"type":"text","value":" command. Assuming the previously created migration file already exists, running the rollback command will drop the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace migration:rollback\n\n<span class=\"token comment\"># completed database/migrations/1584350623957_users (batch: 1)</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"how-rollback-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-rollback-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How rollback works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Every migration class has two methods, "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"up"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"down"}]},{"type":"text","value":". The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"down"}]},{"type":"text","value":" is called during the rollback process."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You (the developer) is responsible for writing correct instructions to undo the changes made by the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"up"}]},{"type":"text","value":" method. For example: If "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"up"}]},{"type":"text","value":" method creates a table, then the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"down"}]},{"type":"text","value":" method must drop it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After rollback, Lucid considers the migration file as pending and running "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"migration:run"}]},{"type":"text","value":" will re-run it. So you can modify this file and then re-run it."}]}]},{"type":"element","tag":"h3","props":{"id":"avoiding-rollbacks"},"children":[{"type":"element","tag":"a","props":{"href":"#avoiding-rollbacks","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Avoiding Rollbacks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Performing a rollback during development is perfectly fine, since there is no fear of data loss. However, performing a rollback in production is not really an option in majority of cases. Consider this example:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You create and run a migration to setup the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Overtime this table has received data, since the app is running in production."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your product has evolved and now you want to add a new column to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You cannot simply rollback, edit the existing migration and then re-run it, because, the rollback will drop the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead, you create a new migration file to alter the existing "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"users"}]},{"type":"text","value":" table by adding the required column. In other words, migrations should always move forward."}]},{"type":"element","tag":"h3","props":{"id":"alter-example"},"children":[{"type":"element","tag":"a","props":{"href":"#alter-example","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Alter example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is an example of creating a new migration to alter the existing table."}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"Make Migration"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"Migration"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Make Migration"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:migration add_last_login_column --table<span class=\"token operator\">=</span>users\n\n<span class=\"token comment\"># ✔  create    database/migrations/1584415438372_add_last_login_columns.ts</span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"Migration"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> BaseSchema <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Schema'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Users</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseSchema</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">protected</span> $tableName <span class=\"token operator\">=</span> <span class=\"token string\">'users'</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">up</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$tableName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">      table<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token string\">'last_login_at'</span><span class=\"token punctuation\">)</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">down</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$tableName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">dropColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'last_login_at'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"migrations-config"},"children":[{"type":"element","tag":"a","props":{"href":"#migrations-config","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Migrations Config"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The configuration for migrations is stored inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file under the connection config object."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  mysql<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    client<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n    migrations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      disableTransactions<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      paths<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'database/migrations'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      tableName<span class=\"token operator\">:</span> <span class=\"token string\">'adonis_schema'</span><span class=\"token punctuation\">,</span>\n      disableRollbacksInProduction<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instructions inside a migration file are wrapped inside a database transaction. You can disable the use of transactions by setting "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"disableTransactions = true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You can define multiple "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"paths"}]},{"type":"text","value":" from which to read the migrations files. The migrations are executed in sequence of the defined paths."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"tableName"}]},{"type":"text","value":" property allows you to customize the table name for tracking completed migrations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since rollbacks can lead to data loss, you can disable them in production by setting "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"disableRollbacksInProduction = true"}]},{"type":"text","value":"."}]}]}]}
