{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Debugging Queries"}]},{"type":"element","tag":"h1","props":{"id":"debugging-queries"},"children":[{"type":"element","tag":"a","props":{"href":"#debugging-queries","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Debugging Queries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The best way to debug queries is to listen for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:query"}]},{"type":"text","value":" event and log every query to the console. To begin, lets create "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"text","value":" file using the following ace command."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works"},"children":[{"type":"text","value":"How it works?"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#debugging-in-production"},"children":[{"type":"text","value":"Debugging in Production"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#selectively-logging-queries"},"children":[{"type":"text","value":"Selectively Logging Queries"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:prldfile events\n<span class=\"token comment\"># âœ”  create    start/events.ts</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and paste the following code snippet inside it."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"text","value":" file is registered inside "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".adonisrc.json"}]},{"type":"text","value":" and autoloaded during the application boot."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n<span class=\"token keyword\">import</span> Database <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Database'</span>\n\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db:query'</span><span class=\"token punctuation\">,</span> Database<span class=\"token punctuation\">.</span>prettyPrint<span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, you will have to enable the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"debug"}]},{"type":"text","value":" flag for your database connection inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"5"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  pg<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    client<span class=\"token operator\">:</span> <span class=\"token string\">'pg'</span><span class=\"token punctuation\">,</span>\n    connection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's all. Now, all the executed database queries will be pretty printed on the console as shown in the following screenshot."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/v1596793952/adonisjs.com/query-events_cdxsku.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"how-it-works"},"children":[{"type":"element","tag":"a","props":{"href":"#how-it-works","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"How it works?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lucid emits the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:query"}]},{"type":"text","value":" event for every SQL query executed by any part of your application."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You can manually handle the event or make use of the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database.prettyPrint"}]},{"type":"text","value":" method to log the query to the console with some colors and formatting."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The event is only emitted when "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"debug"}]},{"type":"text","value":" flag is set to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"debugging-in-production"},"children":[{"type":"element","tag":"a","props":{"href":"#debugging-in-production","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Debugging in Production"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above setup is great for development as you can view every single pretty printed to the console for better readability. However, in production, it is recommended to use the "},{"type":"element","tag":"a","props":{"href":"/guides/logger"},"children":[{"type":"text","value":"Logger"}]},{"type":"text","value":" for logging queries in a serialized format and have minimum logging overhead."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead of using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database.prettyPrint"}]},{"type":"text","value":" you must use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Logger.debug"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n\nEvent<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db:query'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also conditionally decide the listener for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"db:query"}]},{"type":"text","value":" event based upon the application environment."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/events.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Event'</span>\n<span class=\"token keyword\">import</span> Logger <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Logger'</span>\n\n<span class=\"dimer-highlight-code-line\"><span class=\"token keyword\">import</span> Database <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Database'</span></span><span class=\"dimer-highlight-code-line\"><span class=\"token keyword\">import</span> Application <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Application'</span></span><span class=\"dimer-highlight-code-line\">&nbsp;</span><span class=\"dimer-highlight-code-line\">Event<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db:query'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>inProduction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    Logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    Database<span class=\"token punctuation\">.</span><span class=\"token function\">prettyPrint</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"dimer-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>"}]}]}]},{"type":"element","tag":"h2","props":{"id":"selectively-logging-queries"},"children":[{"type":"element","tag":"a","props":{"href":"#selectively-logging-queries","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Selectively Logging Queries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Logging every single query in production is not a great idea for following reasons."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You will degrade the performance of your application by increasing logging overhead."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your logs will become too noisy."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If you are using a paid logging service, then you may end up paying more."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a rule of thumb, you should always disable queries debugging in production by setting the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"debug = false"}]},{"type":"text","value":" inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file, and then "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"selectively debug individual queries"}]},{"type":"text","value":" that are critical for your application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The query logging for an individual query can be enabled using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"debug"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Database <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Database'</span>\n\n<span class=\"token keyword\">await</span> Database\n  <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> ðŸ‘ˆ\n"}]}]}]}]}
