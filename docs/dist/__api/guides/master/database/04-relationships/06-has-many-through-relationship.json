{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Has Many Through"}]},{"type":"element","tag":"h1","props":{"id":"has-many-through"},"children":[{"type":"element","tag":"a","props":{"href":"#has-many-through","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Has Many Through"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"HasManyThrough"}]},{"type":"text","value":" relationship allows you define an indirect relationship between two models. For example: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Users have posts"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"users belongs to a country"}]},{"type":"text","value":", hence you should be able to find posts for a country via user."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#relationship-models"},"children":[{"type":"text","value":"Relationship models"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#table-structure"},"children":[{"type":"text","value":"Table Structure"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#preloading-relationship"},"children":[{"type":"text","value":"Preloading relationship"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#persisting-relationship"},"children":[{"type":"text","value":"Persisting relationship"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"relationship-models"},"children":[{"type":"element","tag":"a","props":{"href":"#relationship-models","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Relationship models"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuing with the users, countries and posts. You will have to define following three models."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Models/Country.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n<span class=\"token keyword\">import</span> Post <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/Post'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  column<span class=\"token punctuation\">,</span>\n  BaseModel<span class=\"token punctuation\">,</span>\n  hasManyThrough<span class=\"token punctuation\">,</span>\n  HasManyThrough<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Country</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">hasManyThrough</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Post<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> posts<span class=\"token operator\">:</span> HasManyThrough<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> Post<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"hasManyThrough"}]},{"type":"text","value":" decorator needs a total of two models."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The first model represents the values to fetch."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The second model works as a bridge for the through relationship to work."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"User"}]},{"type":"text","value":" model must have the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"countryId"}]},{"type":"text","value":" foreign key."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Models/User.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> column<span class=\"token punctuation\">,</span> BaseModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> countryId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Post"}]},{"type":"text","value":" model must have the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"userId"}]},{"type":"text","value":" foreign key."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Models/Post.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> column<span class=\"token punctuation\">,</span> BaseModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> userId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"table-structure"},"children":[{"type":"element","tag":"a","props":{"href":"#table-structure","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Table Structure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is an example table describing the relationship at the database level. As you can notice, there is no direct relationship between countries and posts. However, the users table will work as a bridge for same."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/v1596958724/adonisjs.com/has-many-through_u6gkjr.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"preloading-relationship"},"children":[{"type":"element","tag":"a","props":{"href":"#preloading-relationship","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Preloading relationship"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The preloading API for a has many through relationship is already covered in the "},{"type":"element","tag":"a","props":{"href":"/guides/model-relations/introduction#preloading-relationship"},"children":[{"type":"text","value":"introduction guide"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"persisting-relationship"},"children":[{"type":"element","tag":"a","props":{"href":"#persisting-relationship","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Persisting relationship"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is no persistence API for has many through relationship. You must use direct relationships for inserting and updating values."}]}]}
