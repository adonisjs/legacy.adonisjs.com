{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Columns"}]},{"type":"element","tag":"h1","props":{"id":"columns"},"children":[{"type":"element","tag":"a","props":{"href":"#columns","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Columns"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Columns are the properties defined on a model and are decorated using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator. The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator is required to distinguish between the database columns and the other properties of a model."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#defining-columns"},"children":[{"type":"text","value":"Defining columns"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#column-types"},"children":[{"type":"text","value":"Column Types"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#column"},"children":[{"type":"text","value":"@column"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#columndate"},"children":[{"type":"text","value":"@column.date"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#columndatetime"},"children":[{"type":"text","value":"@column.dateTime"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#column-options"},"children":[{"type":"text","value":"Column Options"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#columnname"},"children":[{"type":"text","value":"columnName"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#isprimary"},"children":[{"type":"text","value":"isPrimary"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#prepare"},"children":[{"type":"text","value":"prepare"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#consume"},"children":[{"type":"text","value":"consume"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By the end of this guide, you will know:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How columns are defined on a model"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Configuration options for a column"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to define "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"date"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"datetime"}]},{"type":"text","value":" columns"}]}]},{"type":"element","tag":"h2","props":{"id":"defining-columns"},"children":[{"type":"element","tag":"a","props":{"href":"#defining-columns","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Defining columns"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The columns are defined using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> username<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also define extra properties or methods on your model and unless they are not using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator, Lucid will ignore them. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> fullName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n<span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">initials</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fullName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>last<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"initials"}]},{"type":"text","value":" property doesn't exists inside the database table. It's computed on the fly."}]},{"type":"element","tag":"h2","props":{"id":"column-types"},"children":[{"type":"element","tag":"a","props":{"href":"#column-types","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Column Types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lucid has a total of three different column types."}]},{"type":"element","tag":"h3","props":{"id":"column"},"children":[{"type":"element","tag":"a","props":{"href":"#column","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator is used to mark any model property a database table column. There is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"no concept of defining database types or constraints"}]},{"type":"text","value":" on the models. Lucid follows the approach of keeping the models lean."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Number column */</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  <span class=\"token comment\">/** String column */</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> fullName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  <span class=\"token comment\">/** Boolean column */</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> isActive<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"columndate"},"children":[{"type":"element","tag":"a","props":{"href":"#columndate","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column.date"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The date and date time columns are given special treatment by Lucid."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"First, you can use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"luxon.DateTime"}]},{"type":"text","value":" object instead of using the standard JavaScript date object. Luxon API is much nicer to work with."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lucid will automatically convert the Luxon objects to a formatted string before sending the value to the database."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During fetch, it will convert the database value to an instance of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"luxon.DateTime"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> dob<span class=\"token operator\">:</span> DateTime\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When creating a new record, you can assign "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"DateTime"}]},{"type":"text","value":" instance to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"dob"}]},{"type":"text","value":" column."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nuser<span class=\"token punctuation\">.</span>dob <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">fromISO</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1990-11-20'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similarly, when you fetch the user record, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"dob"}]},{"type":"text","value":" value will be an instance of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"DateTime"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>dob <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">DateTime</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"columndatetime"},"children":[{"type":"element","tag":"a","props":{"href":"#columndatetime","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column.dateTime"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similar to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"date"}]},{"type":"text","value":" column, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"dateTime"}]},{"type":"text","value":" column is used to store values as a datetime. A practical use case of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"dateTime"}]},{"type":"text","value":" column is the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"created_at"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"updated_at"}]},{"type":"text","value":" timestamps"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> autoCreate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> createdAt<span class=\"token operator\">:</span> DateTime\n\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> autoUpdate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> updatedAt<span class=\"token operator\">:</span> DateTime\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoCreate"}]},{"type":"text","value":" and the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoUpdate"}]},{"type":"text","value":" options are used to auto generate the values for a date/date time column."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoCreate"}]},{"type":"text","value":" means, define the value if its not already defined. Great for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"created_at"}]},{"type":"text","value":" column."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoUpdate"}]},{"type":"text","value":" means, update the value every time during update. Great for the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"updated_at"}]},{"type":"text","value":" column."}]}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoCreate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"autoUpdate"}]},{"type":"text","value":" properties are not limited to the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"created_at"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"updated_at"}]},{"type":"text","value":" columns. You can use them with any column."}]}]},{"type":"element","tag":"h2","props":{"id":"column-options"},"children":[{"type":"element","tag":"a","props":{"href":"#column-options","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Column Options"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator allows a handful of configuration options."}]},{"type":"element","tag":"h3","props":{"id":"columnname"},"children":[{"type":"element","tag":"a","props":{"href":"#columnname","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"columnName"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default, Lucid uses the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"snake_case"}]},{"type":"text","value":" version of your model property as the column names. For example: The property "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"fullName"}]},{"type":"text","value":" on the model will be converted to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"full_name"}]},{"type":"text","value":" during database queries."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can customize the column name by defining it explicitly."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> columnName<span class=\"token operator\">:</span> <span class=\"token string\">'user_full_name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> fullName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"isprimary"},"children":[{"type":"element","tag":"a","props":{"href":"#isprimary","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"isPrimary"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A flag to mark a property as the primary key for the table. If you do not define any primary key, then Lucid will use "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" as the primary key."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> primaryKey<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> userId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"prepare"},"children":[{"type":"element","tag":"a","props":{"href":"#prepare","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"prepare"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"prepare"}]},{"type":"text","value":" method can be used to transform the property value for database just before the insert or the update query."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A practical example is to encrypt value just before sending it to the database driver."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Encryption <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Encryption'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">prepare</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Encryption<span class=\"token punctuation\">.</span><span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> ssn<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nuser<span class=\"token punctuation\">.</span>ssn <span class=\"token operator\">=</span> <span class=\"token string\">'078-05-1120'</span>\n<span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"prepare"}]},{"type":"text","value":" method doesn't change the local value. It just transforms the value on the object that is sent to the database."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>ssn<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '078-05-1120'</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"consume"},"children":[{"type":"element","tag":"a","props":{"href":"#consume","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"consume"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"consume"}]},{"type":"text","value":" method is the opposite of the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"prepare"}]},{"type":"text","value":" method. It is invoked after the fetch query, but before the value is assigned to the model instance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuing with the Encryption example, here's how you will decrypt the value."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"],"dataLine":"7"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Encryption <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Encryption'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">prepare</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Encryption<span class=\"token punctuation\">.</span><span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token function-variable function\">consume</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Encryption<span class=\"token punctuation\">.</span><span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> ssn<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two more properties "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs"}]},{"type":"text","value":" that can be defined on the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator. We recommend reading the serialization docs for better understanding on how to use them."}]}]}
