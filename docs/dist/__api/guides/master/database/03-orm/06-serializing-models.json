{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Serializing Models"}]},{"type":"element","tag":"h1","props":{"id":"serializing-models"},"children":[{"type":"element","tag":"a","props":{"href":"#serializing-models","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Serializing Models"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are creating a RESTful API server, then you would want to serialize your model instances to JSON before sending them back in a response. In this guide, we will go through the serialization API."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#serializing-a-model"},"children":[{"type":"text","value":"Serializing a model"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#points-to-note"},"children":[{"type":"text","value":"Points to note"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-property-names"},"children":[{"type":"text","value":"Customizing property names"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#hiding-properties"},"children":[{"type":"text","value":"Hiding properties"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#cherry-picking-fields"},"children":[{"type":"text","value":"Cherry picking fields"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-value"},"children":[{"type":"text","value":"Customizing value"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#serializing-relationships"},"children":[{"type":"text","value":"Serializing relationships"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-relationship-name"},"children":[{"type":"text","value":"Customizing relationship name"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#computed-properties"},"children":[{"type":"text","value":"Computed properties"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"serializing-a-model"},"children":[{"type":"element","tag":"a","props":{"href":"#serializing-a-model","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Serializing a model"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can serialize a model to a plain object by using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"toJSON"}]},{"type":"text","value":" methods. The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"toJSON"}]},{"type":"text","value":" is just an alias for the former one. For demonstration, lets create a model and serialize it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace make:model Post\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open the newly created file and paste the following contents inside it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> slug<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> body<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> autoCreate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> createdAt<span class=\"token operator\">:</span> DateTime\n\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> autoCreate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> autoUpdate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> updatedAt<span class=\"token operator\">:</span> DateTime\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the sake of simplicity, we will create an instance locally and then call the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npost<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'Adonis 101'</span>\npost<span class=\"token punctuation\">.</span>slug <span class=\"token operator\">=</span> <span class=\"token string\">'adonis-101'</span>\npost<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">'Some dummy content'</span>\npost<span class=\"token punctuation\">.</span>createdAt <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npost<span class=\"token punctuation\">.</span>updatedAt <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1587745931/adonisjs.com/lucid-serialize-basic.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"points-to-note"},"children":[{"type":"element","tag":"a","props":{"href":"#points-to-note","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Points to note"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method only includes the properties using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator. Everything else is ignored."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The property names are converted from "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"camelCase"}]},{"type":"text","value":" to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"snake_case"}]},{"type":"text","value":", since majority of APIs use "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"snake_case"}]},{"type":"text","value":" property names."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Luxon date objects are converted to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ISO"}]},{"type":"text","value":" date-time strings."}]}]},{"type":"element","tag":"h2","props":{"id":"customizing-property-names"},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-property-names","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Customizing property names"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default, Lucid will convert "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"camelCase"}]},{"type":"text","value":" property names to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"snake_case"}]},{"type":"text","value":". However, you can easily customize the property names by using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs"}]},{"type":"text","value":" option. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    autoCreate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    serializeAs<span class=\"token operator\">:</span> <span class=\"token string\">'creation_date'</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> createdAt<span class=\"token operator\">:</span> DateTime\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/**\n  Output\n  {\n    ...,\n    creation_date: '2020-04-24T21:54:12.727+05:30',\n  }\n*/</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"hiding-properties"},"children":[{"type":"element","tag":"a","props":{"href":"#hiding-properties","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Hiding properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To hide a property from getting serialized, you can set "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs = null"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> serializeAs<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>  <span class=\"token keyword\">public</span> slug<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/**\n  Output\n  {\n    title: 'Adonis 101',\n    body: 'Some dummy content',\n    created_at: '2020-04-24T21:54:12.727+05:30',\n    updated_at: '2020-04-24T21:54:12.746+05:30'\n  }\n*/</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"cherry-picking-fields"},"children":[{"type":"element","tag":"a","props":{"href":"#cherry-picking-fields","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Cherry picking fields"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializedAs"}]},{"type":"text","value":" option turn off the properties from getting serialized at the global level. However, there we will be times, when you want to decide this on per request basis and this is where cherry picking fields can help you."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method optionally accepts an option to pick/omit fields from getting serialized."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'body'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also define the fields to omit vs the fields to pick."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    omit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'updated_at'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, you can repeat this process for the relationships as well."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"post<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    omit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'updated_at'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  relations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    comments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"During cherry picking, the column names are matched against the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs"}]},{"type":"text","value":" names and not the model property names. WHY?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Imagine you are creating a JSON API server and you decided to allow the users of your API to define the fields they want to be returned in the response."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The users of your API doesn't know about the property names that exists on your models. They only know about the property names they see in the response (ie. the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs"}]},{"type":"text","value":" name) and hence the cherry picking API matches against the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serializeAs"}]},{"type":"text","value":" names."}]},{"type":"element","tag":"h2","props":{"id":"customizing-value"},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-value","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Customizing value"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Along with the serialized property names, you can also customize the value of a given column by defining a custom "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @column<span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    autoCreate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"dimer-highlight-code-line\">    <span class=\"token function-variable function\">serialize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DateTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      <span class=\"token keyword\">return</span> value <span class=\"token operator\">?</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">setZone</span><span class=\"token punctuation\">(</span><span class=\"token string\">'utc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> value</span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> createdAt<span class=\"token operator\">:</span> DateTime\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"serializing-relationships"},"children":[{"type":"element","tag":"a","props":{"href":"#serializing-relationships","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Serializing relationships"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method recursively serializes all the preloaded relationships by invoking the same method on the related models. Consider the following example."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Models/User.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> hasMany<span class=\"token punctuation\">,</span> HasMany <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n<span class=\"token keyword\">import</span> Post <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/Post'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  @<span class=\"token function\">hasMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Post<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> posts<span class=\"token operator\">:</span> HasMany<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> Post<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the above model definition, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"a user has many posts"}]},{"type":"text","value":". Lets run a query to select all the posts for a given user and then serialize the user model instance."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">'App/Models/User'</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User\n  <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 👈preloading posts</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">firstOrFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1587755092/adonisjs.com/lucid-serialize-relations.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"customizing-relationship-name"},"children":[{"type":"element","tag":"a","props":{"href":"#customizing-relationship-name","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Customizing relationship name"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can customize the property name for the serialized relationship."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">hasMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Post<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">    serializeAs<span class=\"token operator\">:</span> <span class=\"token string\">'writings'</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> posts<span class=\"token operator\">:</span> HasMany<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> Post<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"computed-properties"},"children":[{"type":"element","tag":"a","props":{"href":"#computed-properties","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Computed properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As stated earlier, the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"serialize"}]},{"type":"text","value":" method ignores all the model properties except the one using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@column"}]},{"type":"text","value":" decorator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There will be times, when you want to include custom properties inside the serialized output, but without defining them inside the database, and this is where the computed properties comes into the picture."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The serialization process is synchronous and hence you cannot use "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"async/await"}]},{"type":"text","value":" on the computed properties."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'luxon'</span>\n<span class=\"token keyword\">import</span> truncatise <span class=\"token keyword\">from</span> <span class=\"token string\">'truncatise'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseModel<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> body<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  @<span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">excerpt</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">truncatise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> TruncateLength<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The properties using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@computed"}]},{"type":"text","value":" decorator will be included inside the serialized output."}]}]}
