{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Hooks"}]},{"type":"element","tag":"h1","props":{"id":"hooks"},"children":[{"type":"element","tag":"a","props":{"href":"#hooks","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Hooks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hooks are the actions that you can perform during a pre-defined life cycle event. Using hooks, you can encapsulate certain actions within your models vs writing them everywhere inside the codebase."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-first-hook"},"children":[{"type":"text","value":"Creating your first hook"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#understanding-the-dirty-property"},"children":[{"type":"text","value":"Understanding the $dirty property"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#available-hooks"},"children":[{"type":"text","value":"Available Hooks"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#example"},"children":[{"type":"text","value":"Example:"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#beforefind"},"children":[{"type":"text","value":"beforeFind"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#afterfind"},"children":[{"type":"text","value":"afterFind"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#beforefetch"},"children":[{"type":"text","value":"beforeFetch"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#afterfetch"},"children":[{"type":"text","value":"afterFetch"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A great example of hooks is password hashing. Instead of hashing the user password everywhere inside your codebase, you can write it as a hook and the guarantee that user passwords will be persisted as plain text."}]},{"type":"element","tag":"h2","props":{"id":"creating-your-first-hook"},"children":[{"type":"element","tag":"a","props":{"href":"#creating-your-first-hook","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Creating your first hook"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lets build on the password hashing example and define a hook to hash the user password before saving it to the database."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"app/Models/User.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Hash <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Hash'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> column<span class=\"token punctuation\">,</span> beforeSave<span class=\"token punctuation\">,</span> BaseModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> password<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n<span class=\"dimer-highlight-code-line\">  @<span class=\"token function\">beforeSave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">hashPassword</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>$dirty<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"dimer-highlight-code-line\">      user<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Hash<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span></span><span class=\"dimer-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"dimer-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeSave"}]},{"type":"text","value":" hook is invoked before the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"insert"}]},{"type":"text","value":" and the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"update"}]},{"type":"text","value":" queries."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hooks can be async. So you can use the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"await"}]},{"type":"text","value":" keyword inside them."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hooks are always defined as static functions and receives the instance of the model as the first argument."}]}]},{"type":"element","tag":"h3","props":{"id":"understanding-the-dirty-property"},"children":[{"type":"element","tag":"a","props":{"href":"#understanding-the-dirty-property","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Understanding the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"$dirty"}]},{"type":"text","value":" property"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeSave"}]},{"type":"text","value":" hook is called every time a new user is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"created"}]},{"type":"text","value":" or "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" using the model instance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During update, it is possible that you have updated other properties and not the user password, hence there is no need to re-hash the existing hash and this is reason behind using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"$dirty"}]},{"type":"text","value":" object."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"$dirty"}]},{"type":"text","value":" object only contains the changed values. So, you can check if password was changed and then hash the new value."}]},{"type":"element","tag":"h2","props":{"id":"available-hooks"},"children":[{"type":"element","tag":"a","props":{"href":"#available-hooks","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Available Hooks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Following is the list of available hooks. Every hook comes with a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"before"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" variation."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Hook"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeSave"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"before the insert or the update"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterSave"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after the insert or the update"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeCreate"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked only "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"before the insert"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterCreate"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked only "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after the insert"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeUpdate"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked only "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"before the update"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterUpdate"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked only "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after the update"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeDelete"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"before the delete"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterDelete"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Invoked "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after the delete"}]},{"type":"text","value":" query. Receives the model instance as the only argument."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"example"},"children":[{"type":"element","tag":"a","props":{"href":"#example","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Import the required decorators."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BaseModel<span class=\"token punctuation\">,</span>\n  beforeSave<span class=\"token punctuation\">,</span>\n  afterSave<span class=\"token punctuation\">,</span>\n  beforeCreate<span class=\"token punctuation\">,</span>\n  afterCreate<span class=\"token punctuation\">,</span>\n  beforeUpdate<span class=\"token punctuation\">,</span>\n  afterUpdate<span class=\"token punctuation\">,</span>\n  beforeDelete<span class=\"token punctuation\">,</span>\n  afterDelete<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Orm'</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create static methods and use the appropriate decorator"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">beforeSave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">hashPassword</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">beforeDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handleSoftDeletion</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">afterUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">createChangeRevision</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"beforefind"},"children":[{"type":"element","tag":"a","props":{"href":"#beforefind","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeFind"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeFind"}]},{"type":"text","value":" hook is invoked just before the query is executed to a find a single row. This hook receives the query builder instance and you can attach your own constraints to it."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BaseModel<span class=\"token punctuation\">,</span>\n  beforeFind<span class=\"token punctuation\">,</span>\n  ModelQueryBuilderContract<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Model'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">beforeFind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">ignoreDeleted</span> <span class=\"token punctuation\">(</span>query<span class=\"token operator\">:</span> ModelQueryBuilderContract<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> User<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    query<span class=\"token punctuation\">.</span><span class=\"token function\">whereNull</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is_deleted'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"afterfind"},"children":[{"type":"element","tag":"a","props":{"href":"#afterfind","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterFind"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterFind"}]},{"type":"text","value":" event receives the model instance."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BaseModel<span class=\"token punctuation\">,</span>\n  afterFind<span class=\"token punctuation\">,</span>\n  ModelQueryBuilderContract<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Model'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">afterFind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">afterFindHook</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"beforefetch"},"children":[{"type":"element","tag":"a","props":{"href":"#beforefetch","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"beforeFetch"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similar to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeFind"}]},{"type":"text","value":", the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"beforeFetch"}]},{"type":"text","value":" hook also receives the query builder instance. However, this hook is invoked whenever a query is executed without using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"first"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"h3","props":{"id":"afterfetch"},"children":[{"type":"element","tag":"a","props":{"href":"#afterfetch","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"afterFetch"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"afterFetch"}]},{"type":"text","value":" hook receives an array of model instances."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BaseModel<span class=\"token punctuation\">,</span>\n  afterFetch<span class=\"token punctuation\">,</span>\n  ModelQueryBuilderContract<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Model'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">afterFetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">afterFetchHook</span> <span class=\"token punctuation\">(</span>users<span class=\"token operator\">:</span> User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]}
