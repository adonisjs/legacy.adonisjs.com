{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Setup"}]},{"type":"element","tag":"h1","props":{"id":"setup"},"children":[{"type":"element","tag":"a","props":{"href":"#setup","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this guide, you will install "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid"}]},{"type":"text","value":" package, along with the database driver of your choice. Lucid supports the following database engines."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#configure-sqlite"},"children":[{"type":"text","value":"Configure SQLite"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#configure-mysql"},"children":[{"type":"text","value":"Configure MySQL"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#configure-postgresql"},"children":[{"type":"text","value":"Configure PostgreSQL"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#other-database-servers"},"children":[{"type":"text","value":"Other Database Servers"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verifying-connection"},"children":[{"type":"text","value":"Verifying Connection"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#health-checks"},"children":[{"type":"text","value":"Health Checks"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#manual-query"},"children":[{"type":"text","value":"Manual Query"}]}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MYSQL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SQLite"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MSSQL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PostgreSQL (along with Amazon Redshift)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MariaDB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"and OracleDB"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the package from the npm registry by running the following command."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@alpha"}]},{"type":"text","value":" tag is required during the preview release."}]}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"yarn"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i @adonisjs/lucid@alpha\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"yarn"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @adonisjs/lucid@alpha\n"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, you must setup Lucid by running the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace invoke"}]},{"type":"text","value":" command. The following command will create the default config file and also registers "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid"}]},{"type":"text","value":" under the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"providers"}]},{"type":"text","value":" array."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"node ace invoke @adonisjs/lucid\n\n<span class=\"token comment\"># ✔  create    config/database.ts</span>\n<span class=\"token comment\">#    update    .env</span>\n<span class=\"token comment\">#    update    tsconfig.json</span>\n<span class=\"token comment\">#    update    .adonisrc.json</span>\n<span class=\"token comment\"># ✔  create    ace-manifest.json</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Congrats! You have configured Lucid. We will now continue with the setup for different database backends."}]},{"type":"element","tag":"h2","props":{"id":"configure-sqlite"},"children":[{"type":"element","tag":"a","props":{"href":"#configure-sqlite","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Configure SQLite"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SQLite is a light weight file based database server. You can quickly get up and running with SQLite by just installing the database driver from npm."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i -D sqlite3\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, open the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file to review the configuration options."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  connection<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_CONNECTION'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sqlite'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span>\n  connections<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    sqlite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      client<span class=\"token operator\">:</span> <span class=\"token string\">'sqlite'</span><span class=\"token punctuation\">,</span>\n      connection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">        filename<span class=\"token operator\">:</span> Application<span class=\"token punctuation\">.</span><span class=\"token function\">tmpPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db.sqlite3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      useNullAsDefault<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      healthCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lucid relies on the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"DB_CONNECTION"}]},{"type":"text","value":" environment variable to decide the default database connection to use. So make sure to update this to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"sqlite"}]},{"type":"text","value":" inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token assign-left variable\">DB_CONNECTION</span><span class=\"token operator\">=</span>sqlite\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The database file lives inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"tmp"}]},{"type":"text","value":" path. So, do make sure to create the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"tmp"}]},{"type":"text","value":" directory inside the project root."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">mkdir</span> tmp\n"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"configure-mysql"},"children":[{"type":"element","tag":"a","props":{"href":"#configure-mysql","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Configure MySQL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first step is to have MySQL server running on your computer. You can "},{"type":"element","tag":"a","props":{"href":"https://dev.mysql.com/downloads/installer/"},"children":[{"type":"text","value":"install MySQL"}]},{"type":"text","value":" for your operating system by following the official docs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once, the server is running, install the MySQL driver for Node.js from npm."}]},{"type":"element","tag":"div","props":{"className":["alert","alert-note"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also connect to the MariaDB database using the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"mysql"}]},{"type":"text","value":" driver."}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i mysql\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, open the database config file to review the configuration options."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  connection<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_CONNECTION'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sqlite'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span>\n  connections<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    mysql<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      client<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n      connection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">        host<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_HOST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        port<span class=\"token operator\">:</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_PORT'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        user<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_USER'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        password<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        database<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_NAME'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      healthCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lucid relies on the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"DB_CONNECTION"}]},{"type":"text","value":" environment variable to decide the default database connection to use. So make sure to update this to "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"mysql"}]},{"type":"text","value":" inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Also, the database connection values are read from the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file. So make sure to update them as well."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token assign-left variable\">DB_CONNECTION</span><span class=\"token operator\">=</span>mysql\n<span class=\"token assign-left variable\">DB_HOST</span><span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1\n<span class=\"token assign-left variable\">DB_USER</span><span class=\"token operator\">=</span>root\n<span class=\"token assign-left variable\">DB_PASSWORD</span><span class=\"token operator\">=</span>password\n<span class=\"token assign-left variable\">DB_NAME</span><span class=\"token operator\">=</span>lucid\n"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With MySQL, you can also connect using the unix domain socket. Setting the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"socketPath"}]},{"type":"text","value":" will ignore host and port."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"connections<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  mysql<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    client<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n    connection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">      socketPath<span class=\"token operator\">:</span> <span class=\"token string\">'/path/to/socket.sock'</span><span class=\"token punctuation\">,</span></span>      user<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_USER'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n      database<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_NAME'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    healthCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"configure-postgresql"},"children":[{"type":"element","tag":"a","props":{"href":"#configure-postgresql","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Configure PostgreSQL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just like MySQL, the first step with PostgreSQL is also to install the database server. Make sure to follow the "},{"type":"element","tag":"a","props":{"href":"https://www.postgresql.org/download/"},"children":[{"type":"text","value":"official guide"}]},{"type":"text","value":" on installation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once, the database server is running, install the PostgreSQL driver for Node.js from npm."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i pg\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, open the database config file to review the configuration options."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">  connection<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_CONNECTION'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sqlite'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span>\n  connections<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    pg<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      client<span class=\"token operator\">:</span> <span class=\"token string\">'pg'</span><span class=\"token punctuation\">,</span>\n      connection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"dimer-highlight-code-line\">        host<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_HOST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        port<span class=\"token operator\">:</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_PORT'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        user<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_USER'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        password<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span><span class=\"dimer-highlight-code-line\">        database<span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB_NAME'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lucid'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      healthCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Again, make sure to update the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file with the correct "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"DB_CONNECTION"}]},{"type":"text","value":" and other config values."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token assign-left variable\">DB_CONNECTION</span><span class=\"token operator\">=</span>pg\n<span class=\"token assign-left variable\">DB_HOST</span><span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1\n<span class=\"token assign-left variable\">DB_USER</span><span class=\"token operator\">=</span>user\n<span class=\"token assign-left variable\">DB_PASSWORD</span><span class=\"token operator\">=</span>password\n<span class=\"token assign-left variable\">DB_NAME</span><span class=\"token operator\">=</span>lucid\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With PostgreSQL, you can also pass the connection string instead of defining every connection property separately."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token punctuation\">{</span>\n  connections<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    pg<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      client<span class=\"token operator\">:</span> <span class=\"token string\">'pg'</span><span class=\"token punctuation\">,</span>\n      connection<span class=\"token operator\">:</span> <span class=\"token string\">'postgres://someuser:somepassword@somehost:5432/somedatabase'</span><span class=\"token punctuation\">,</span>\n      healthCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>    \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"other-database-servers"},"children":[{"type":"element","tag":"a","props":{"href":"#other-database-servers","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Other Database Servers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We haven't covered the setup for all possible databases. However, the process remains same for every other database server."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get the database server up and running."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the driver from npm. Following is the list of drivers."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> <span class=\"token function\">install</span> pg\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> sqlite3\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> mysql\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> mysql2\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> oracledb\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> mssql\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finally, define a new connection inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file"}]}]},{"type":"element","tag":"h2","props":{"id":"verifying-connection"},"children":[{"type":"element","tag":"a","props":{"href":"#verifying-connection","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Verifying Connection"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are a couple of ways to verify the connection settings and ensure that you are able to connect to your database server successfully. One way is to use the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"health checks api"}]},{"type":"text","value":" and another one is to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"manually run a query"}]},{"type":"text","value":" inside a dummy route."}]},{"type":"element","tag":"h3","props":{"id":"health-checks"},"children":[{"type":"element","tag":"a","props":{"href":"#health-checks","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Health Checks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lucid has inbuilt support for health checks and it works across all database engines. All you need to do is, enable the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"healthCheck"}]},{"type":"text","value":" flag on the database connection inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/database.ts"}]},{"type":"text","value":" file and then use the AdonisJS global Health check API, as shown in the following example."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Route <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Route'</span>\n<span class=\"token keyword\">import</span> HealthCheck <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HealthCheck'</span>\n\nRoute<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'health'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> response <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> report <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> HealthCheck<span class=\"token punctuation\">.</span><span class=\"token function\">getReport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">return</span> report<span class=\"token punctuation\">.</span>healthy\n    <span class=\"token operator\">?</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">badRequest</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you now visit "},{"type":"element","tag":"a","props":{"href":"http://localhost:3333/health"},"children":[{"type":"text","value":"http://localhost:3333/health"}]},{"type":"text","value":", you must see the health check report for your database connection(s)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"src":"https://res.cloudinary.com/adonis-js/image/upload/q_auto,w_700,f_auto,fl_lossy/v1587544897/adonisjs.com/health-check-report_emwloq.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"manual-query"},"children":[{"type":"element","tag":"a","props":{"href":"#manual-query","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Manual Query"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another option is to perform a query inside a dummy route. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"start/routes.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Route <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Route'</span>\n<span class=\"token keyword\">import</span> Database <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Lucid/Database'</span>\n\nRoute<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Database<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]}
